// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.echo.protocol.captain



@SerialVersionUID(0L)
final case class LoginRequest(
    password: String = "",
    name: com.echo.protocol.captain.LoginRequest.Name = com.echo.protocol.captain.LoginRequest.Name.Empty
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[LoginRequest] with com.trueaccord.lenses.Updatable[LoginRequest] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (name.phonenum.isDefined) { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, name.phonenum.get) }
      if (name.email.isDefined) { __size += com.google.protobuf.CodedOutputStream.computeStringSize(2, name.email.get) }
      if (password != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(10, password) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: com.google.protobuf.CodedOutputStream): Unit = {
      name.phonenum.foreach { __v =>
        _output__.writeString(1, __v)
      };
      name.email.foreach { __v =>
        _output__.writeString(2, __v)
      };
      {
        val __v = password
        if (__v != "") {
          _output__.writeString(10, __v)
        }
      };
    }
    def mergeFrom(`_input__`: com.google.protobuf.CodedInputStream): com.echo.protocol.captain.LoginRequest = {
      var __password = this.password
      var __name = this.name
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __name = com.echo.protocol.captain.LoginRequest.Name.Phonenum(_input__.readString())
          case 18 =>
            __name = com.echo.protocol.captain.LoginRequest.Name.Email(_input__.readString())
          case 82 =>
            __password = _input__.readString()
          case tag => _input__.skipField(tag)
        }
      }
      com.echo.protocol.captain.LoginRequest(
          password = __password,
          name = __name
      )
    }
    def getPhonenum: String = name.phonenum.getOrElse("")
    def withPhonenum(__v: String): LoginRequest = copy(name = com.echo.protocol.captain.LoginRequest.Name.Phonenum(__v))
    def getEmail: String = name.email.getOrElse("")
    def withEmail(__v: String): LoginRequest = copy(name = com.echo.protocol.captain.LoginRequest.Name.Email(__v))
    def withPassword(__v: String): LoginRequest = copy(password = __v)
    def clearName: LoginRequest = copy(name = com.echo.protocol.captain.LoginRequest.Name.Empty)
    def withName(__v: com.echo.protocol.captain.LoginRequest.Name): LoginRequest = copy(name = __v)
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => name.phonenum.getOrElse(null)
        case 2 => name.email.getOrElse(null)
        case 10 => {
          val __t = password
          if (__t != "") __t else null
        }
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.echo.protocol.captain.LoginRequest
}

object LoginRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.echo.protocol.captain.LoginRequest] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.echo.protocol.captain.LoginRequest] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.captain.LoginRequest = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    com.echo.protocol.captain.LoginRequest(
      __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[String],
      name = __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[String]].map(com.echo.protocol.captain.LoginRequest.Name.Phonenum(_)) orElse
__fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]].map(com.echo.protocol.captain.LoginRequest.Name.Email(_)) getOrElse com.echo.protocol.captain.LoginRequest.Name.Empty
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = CaptainProto.descriptor.getMessageTypes.get(4)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = com.echo.protocol.captain.LoginRequest(
  )
  sealed trait Name extends com.trueaccord.scalapb.GeneratedOneof {
    def isEmpty: Boolean = false
    def isDefined: Boolean = true
    def number: Int
    def isPhonenum: Boolean = false
    def isEmail: Boolean = false
    def phonenum: scala.Option[String] = None
    def email: scala.Option[String] = None
  }
  object Name extends {
    @SerialVersionUID(0L)
    case object Empty extends com.echo.protocol.captain.LoginRequest.Name {
      override def isEmpty: Boolean = true
      override def isDefined: Boolean = false
      override def number: Int = 0
    }
  
    @SerialVersionUID(0L)
    case class Phonenum(value: String) extends com.echo.protocol.captain.LoginRequest.Name {
      override def isPhonenum: Boolean = true
      override def phonenum: scala.Option[String] = Some(value)
      override def number: Int = 1
    }
    @SerialVersionUID(0L)
    case class Email(value: String) extends com.echo.protocol.captain.LoginRequest.Name {
      override def isEmail: Boolean = true
      override def email: scala.Option[String] = Some(value)
      override def number: Int = 2
    }
  }
  implicit class LoginRequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.captain.LoginRequest]) extends com.trueaccord.lenses.ObjectLens[UpperPB, com.echo.protocol.captain.LoginRequest](_l) {
    def phonenum: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getPhonenum)((c_, f_) => c_.copy(name = com.echo.protocol.captain.LoginRequest.Name.Phonenum(f_)))
    def email: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getEmail)((c_, f_) => c_.copy(name = com.echo.protocol.captain.LoginRequest.Name.Email(f_)))
    def password: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.password)((c_, f_) => c_.copy(password = f_))
    def name: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.captain.LoginRequest.Name] = field(_.name)((c_, f_) => c_.copy(name = f_))
  }
  final val PHONENUM_FIELD_NUMBER = 1
  final val EMAIL_FIELD_NUMBER = 2
  final val PASSWORD_FIELD_NUMBER = 10
}
