// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.echo.protocol.captain



@SerialVersionUID(0L)
final case class UpdateUserInfoRequest(
    token: String = "",
    kvs: Seq[com.echo.protocol.common.KVField] = Nil
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[UpdateUserInfoRequest] with com.trueaccord.lenses.Updatable[UpdateUserInfoRequest] {
    @transient
    lazy val serializedSize: Int = {
      var __size = 0
      if (token != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, token) }
      kvs.foreach(kvs => __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(kvs.serializedSize) + kvs.serializedSize)
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = token
        if (__v != "") {
          output.writeString(1, __v)
        }
      };
      kvs.foreach { __v => 
        output.writeTag(2, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.captain.UpdateUserInfoRequest = {
      var __token = this.token
      val __kvs = (scala.collection.immutable.Vector.newBuilder[com.echo.protocol.common.KVField] ++= this.kvs)
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __token = __input.readString()
          case 18 =>
            __kvs += com.trueaccord.scalapb.LiteParser.readMessage(__input, com.echo.protocol.common.KVField.defaultInstance)
          case tag => __input.skipField(tag)
        }
      }
      com.echo.protocol.captain.UpdateUserInfoRequest(
          token = __token,
          kvs = __kvs.result()
      )
    }
    def withToken(__v: String): UpdateUserInfoRequest = copy(token = __v)
    def clearKvs = copy(kvs = Seq.empty)
    def addKvs(__vs: com.echo.protocol.common.KVField*): UpdateUserInfoRequest = addAllKvs(__vs)
    def addAllKvs(__vs: TraversableOnce[com.echo.protocol.common.KVField]): UpdateUserInfoRequest = copy(kvs = kvs ++ __vs)
    def withKvs(__v: Seq[com.echo.protocol.common.KVField]): UpdateUserInfoRequest = copy(kvs = __v)
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => {
          val __t = token
          if (__t != "") __t else null
        }
        case 2 => kvs
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.echo.protocol.captain.UpdateUserInfoRequest
}

object UpdateUserInfoRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[UpdateUserInfoRequest] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[UpdateUserInfoRequest] = this
  def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.captain.UpdateUserInfoRequest = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    com.echo.protocol.captain.UpdateUserInfoRequest(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(1), Nil).asInstanceOf[Seq[com.echo.protocol.common.KVField]]
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = CaptainProto.descriptor.getMessageTypes.get(8)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    require(__field.getContainingType() == descriptor, "FieldDescriptor does not match message type.")
    var __out: com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    __field.getNumber match {
      case 2 => __out = com.echo.protocol.common.KVField
    }
  __out
  }
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = com.echo.protocol.captain.UpdateUserInfoRequest(
  )
  implicit class UpdateUserInfoRequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, UpdateUserInfoRequest]) extends com.trueaccord.lenses.ObjectLens[UpperPB, UpdateUserInfoRequest](_l) {
    def token: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.token)((c_, f_) => c_.copy(token = f_))
    def kvs: com.trueaccord.lenses.Lens[UpperPB, Seq[com.echo.protocol.common.KVField]] = field(_.kvs)((c_, f_) => c_.copy(kvs = f_))
  }
  final val TOKEN_FIELD_NUMBER = 1
  final val KVS_FIELD_NUMBER = 2
}
