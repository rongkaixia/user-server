// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.echo.protocol.gold



/** @param products
  *   商品内容
  * @param payMethod
  *  支付模式
  * @param deliverMethod
  *  送货模式
  * @param recipientsName
  *  收货人
  * @param recipientsPhone
  *  电话
  * @param recipientsAddress
  *  地址
  * @param recipientsPostcode
  *  邮编
  * @param comment
  *  备注
  * @param couponId
  *   优惠券
  * @param discount
  *   折扣，值的是优惠多少钱，如-100.11，而不是多少折
  * @param payAmt
  *   应支付价格 = sum(products.total)
  * @param realPayAmt
  *   实际支付价格 = sum(products.total) + discount
  * @param state
  *   订单状态
  * @param createAt
  *   创建时间
  * @param updateAt
  *   最后更新时间
  * @param expireAt
  *   超时关闭时间
  * @param payAt
  *   支付时间
  */
@SerialVersionUID(0L)
final case class OrderInfo(
    orderId: String = "",
    userId: String = "",
    products: scala.collection.Seq[com.echo.protocol.product.ProductInfo] = Nil,
    payMethod: com.echo.protocol.gold.PayMethod = com.echo.protocol.gold.PayMethod.PAY_METHOD_EMPTY,
    deliverMethod: com.echo.protocol.gold.DeliverMethod = com.echo.protocol.gold.DeliverMethod.DELIVER_METHOD_EMPTY,
    recipientsName: String = "",
    recipientsPhone: String = "",
    recipientsAddress: String = "",
    recipientsPostcode: String = "",
    comment: String = "",
    couponId: scala.collection.Seq[String] = Nil,
    discount: Double = 0.0,
    payAmt: Double = 0.0,
    realPayAmt: Double = 0.0,
    state: com.echo.protocol.gold.OrderState = com.echo.protocol.gold.OrderState.ORDER_STATE_EMPTY,
    createAt: Long = 0L,
    updateAt: Long = 0L,
    expireAt: Long = 0L,
    payAt: Long = 0L,
    deliverAt: Long = 0L,
    deliverConfirmAt: Long = 0L,
    refundAt: Long = 0L,
    refundConfirmAt: Long = 0L,
    cancelAt: Long = 0L
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[OrderInfo] with com.trueaccord.lenses.Updatable[OrderInfo] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (orderId != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, orderId) }
      if (userId != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(2, userId) }
      products.foreach(products => __size += 1 + com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(products.serializedSize) + products.serializedSize)
      if (payMethod != com.echo.protocol.gold.PayMethod.PAY_METHOD_EMPTY) { __size += com.google.protobuf.CodedOutputStream.computeEnumSize(6, payMethod.value) }
      if (deliverMethod != com.echo.protocol.gold.DeliverMethod.DELIVER_METHOD_EMPTY) { __size += com.google.protobuf.CodedOutputStream.computeEnumSize(7, deliverMethod.value) }
      if (recipientsName != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(8, recipientsName) }
      if (recipientsPhone != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(9, recipientsPhone) }
      if (recipientsAddress != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(10, recipientsAddress) }
      if (recipientsPostcode != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(11, recipientsPostcode) }
      if (comment != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(12, comment) }
      couponId.foreach(couponId => __size += com.google.protobuf.CodedOutputStream.computeStringSize(13, couponId))
      if (discount != 0.0) { __size += com.google.protobuf.CodedOutputStream.computeDoubleSize(22, discount) }
      if (payAmt != 0.0) { __size += com.google.protobuf.CodedOutputStream.computeDoubleSize(23, payAmt) }
      if (realPayAmt != 0.0) { __size += com.google.protobuf.CodedOutputStream.computeDoubleSize(24, realPayAmt) }
      if (state != com.echo.protocol.gold.OrderState.ORDER_STATE_EMPTY) { __size += com.google.protobuf.CodedOutputStream.computeEnumSize(30, state.value) }
      if (createAt != 0L) { __size += com.google.protobuf.CodedOutputStream.computeInt64Size(40, createAt) }
      if (updateAt != 0L) { __size += com.google.protobuf.CodedOutputStream.computeInt64Size(41, updateAt) }
      if (expireAt != 0L) { __size += com.google.protobuf.CodedOutputStream.computeInt64Size(42, expireAt) }
      if (payAt != 0L) { __size += com.google.protobuf.CodedOutputStream.computeInt64Size(43, payAt) }
      if (deliverAt != 0L) { __size += com.google.protobuf.CodedOutputStream.computeInt64Size(44, deliverAt) }
      if (deliverConfirmAt != 0L) { __size += com.google.protobuf.CodedOutputStream.computeInt64Size(45, deliverConfirmAt) }
      if (refundAt != 0L) { __size += com.google.protobuf.CodedOutputStream.computeInt64Size(46, refundAt) }
      if (refundConfirmAt != 0L) { __size += com.google.protobuf.CodedOutputStream.computeInt64Size(47, refundConfirmAt) }
      if (cancelAt != 0L) { __size += com.google.protobuf.CodedOutputStream.computeInt64Size(48, cancelAt) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = orderId
        if (__v != "") {
          _output__.writeString(1, __v)
        }
      };
      {
        val __v = userId
        if (__v != "") {
          _output__.writeString(2, __v)
        }
      };
      products.foreach { __v =>
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      {
        val __v = payMethod
        if (__v != com.echo.protocol.gold.PayMethod.PAY_METHOD_EMPTY) {
          _output__.writeEnum(6, __v.value)
        }
      };
      {
        val __v = deliverMethod
        if (__v != com.echo.protocol.gold.DeliverMethod.DELIVER_METHOD_EMPTY) {
          _output__.writeEnum(7, __v.value)
        }
      };
      {
        val __v = recipientsName
        if (__v != "") {
          _output__.writeString(8, __v)
        }
      };
      {
        val __v = recipientsPhone
        if (__v != "") {
          _output__.writeString(9, __v)
        }
      };
      {
        val __v = recipientsAddress
        if (__v != "") {
          _output__.writeString(10, __v)
        }
      };
      {
        val __v = recipientsPostcode
        if (__v != "") {
          _output__.writeString(11, __v)
        }
      };
      {
        val __v = comment
        if (__v != "") {
          _output__.writeString(12, __v)
        }
      };
      couponId.foreach { __v =>
        _output__.writeString(13, __v)
      };
      {
        val __v = discount
        if (__v != 0.0) {
          _output__.writeDouble(22, __v)
        }
      };
      {
        val __v = payAmt
        if (__v != 0.0) {
          _output__.writeDouble(23, __v)
        }
      };
      {
        val __v = realPayAmt
        if (__v != 0.0) {
          _output__.writeDouble(24, __v)
        }
      };
      {
        val __v = state
        if (__v != com.echo.protocol.gold.OrderState.ORDER_STATE_EMPTY) {
          _output__.writeEnum(30, __v.value)
        }
      };
      {
        val __v = createAt
        if (__v != 0L) {
          _output__.writeInt64(40, __v)
        }
      };
      {
        val __v = updateAt
        if (__v != 0L) {
          _output__.writeInt64(41, __v)
        }
      };
      {
        val __v = expireAt
        if (__v != 0L) {
          _output__.writeInt64(42, __v)
        }
      };
      {
        val __v = payAt
        if (__v != 0L) {
          _output__.writeInt64(43, __v)
        }
      };
      {
        val __v = deliverAt
        if (__v != 0L) {
          _output__.writeInt64(44, __v)
        }
      };
      {
        val __v = deliverConfirmAt
        if (__v != 0L) {
          _output__.writeInt64(45, __v)
        }
      };
      {
        val __v = refundAt
        if (__v != 0L) {
          _output__.writeInt64(46, __v)
        }
      };
      {
        val __v = refundConfirmAt
        if (__v != 0L) {
          _output__.writeInt64(47, __v)
        }
      };
      {
        val __v = cancelAt
        if (__v != 0L) {
          _output__.writeInt64(48, __v)
        }
      };
    }
    def mergeFrom(`_input__`: com.google.protobuf.CodedInputStream): com.echo.protocol.gold.OrderInfo = {
      var __orderId = this.orderId
      var __userId = this.userId
      val __products = (scala.collection.immutable.Vector.newBuilder[com.echo.protocol.product.ProductInfo] ++= this.products)
      var __payMethod = this.payMethod
      var __deliverMethod = this.deliverMethod
      var __recipientsName = this.recipientsName
      var __recipientsPhone = this.recipientsPhone
      var __recipientsAddress = this.recipientsAddress
      var __recipientsPostcode = this.recipientsPostcode
      var __comment = this.comment
      val __couponId = (scala.collection.immutable.Vector.newBuilder[String] ++= this.couponId)
      var __discount = this.discount
      var __payAmt = this.payAmt
      var __realPayAmt = this.realPayAmt
      var __state = this.state
      var __createAt = this.createAt
      var __updateAt = this.updateAt
      var __expireAt = this.expireAt
      var __payAt = this.payAt
      var __deliverAt = this.deliverAt
      var __deliverConfirmAt = this.deliverConfirmAt
      var __refundAt = this.refundAt
      var __refundConfirmAt = this.refundConfirmAt
      var __cancelAt = this.cancelAt
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __orderId = _input__.readString()
          case 18 =>
            __userId = _input__.readString()
          case 26 =>
            __products += com.trueaccord.scalapb.LiteParser.readMessage(_input__, com.echo.protocol.product.ProductInfo.defaultInstance)
          case 48 =>
            __payMethod = com.echo.protocol.gold.PayMethod.fromValue(_input__.readEnum())
          case 56 =>
            __deliverMethod = com.echo.protocol.gold.DeliverMethod.fromValue(_input__.readEnum())
          case 66 =>
            __recipientsName = _input__.readString()
          case 74 =>
            __recipientsPhone = _input__.readString()
          case 82 =>
            __recipientsAddress = _input__.readString()
          case 90 =>
            __recipientsPostcode = _input__.readString()
          case 98 =>
            __comment = _input__.readString()
          case 106 =>
            __couponId += _input__.readString()
          case 177 =>
            __discount = _input__.readDouble()
          case 185 =>
            __payAmt = _input__.readDouble()
          case 193 =>
            __realPayAmt = _input__.readDouble()
          case 240 =>
            __state = com.echo.protocol.gold.OrderState.fromValue(_input__.readEnum())
          case 320 =>
            __createAt = _input__.readInt64()
          case 328 =>
            __updateAt = _input__.readInt64()
          case 336 =>
            __expireAt = _input__.readInt64()
          case 344 =>
            __payAt = _input__.readInt64()
          case 352 =>
            __deliverAt = _input__.readInt64()
          case 360 =>
            __deliverConfirmAt = _input__.readInt64()
          case 368 =>
            __refundAt = _input__.readInt64()
          case 376 =>
            __refundConfirmAt = _input__.readInt64()
          case 384 =>
            __cancelAt = _input__.readInt64()
          case tag => _input__.skipField(tag)
        }
      }
      com.echo.protocol.gold.OrderInfo(
          orderId = __orderId,
          userId = __userId,
          products = __products.result(),
          payMethod = __payMethod,
          deliverMethod = __deliverMethod,
          recipientsName = __recipientsName,
          recipientsPhone = __recipientsPhone,
          recipientsAddress = __recipientsAddress,
          recipientsPostcode = __recipientsPostcode,
          comment = __comment,
          couponId = __couponId.result(),
          discount = __discount,
          payAmt = __payAmt,
          realPayAmt = __realPayAmt,
          state = __state,
          createAt = __createAt,
          updateAt = __updateAt,
          expireAt = __expireAt,
          payAt = __payAt,
          deliverAt = __deliverAt,
          deliverConfirmAt = __deliverConfirmAt,
          refundAt = __refundAt,
          refundConfirmAt = __refundConfirmAt,
          cancelAt = __cancelAt
      )
    }
    def withOrderId(__v: String): OrderInfo = copy(orderId = __v)
    def withUserId(__v: String): OrderInfo = copy(userId = __v)
    def clearProducts = copy(products = scala.collection.Seq.empty)
    def addProducts(__vs: com.echo.protocol.product.ProductInfo*): OrderInfo = addAllProducts(__vs)
    def addAllProducts(__vs: TraversableOnce[com.echo.protocol.product.ProductInfo]): OrderInfo = copy(products = products ++ __vs)
    def withProducts(__v: scala.collection.Seq[com.echo.protocol.product.ProductInfo]): OrderInfo = copy(products = __v)
    def withPayMethod(__v: com.echo.protocol.gold.PayMethod): OrderInfo = copy(payMethod = __v)
    def withDeliverMethod(__v: com.echo.protocol.gold.DeliverMethod): OrderInfo = copy(deliverMethod = __v)
    def withRecipientsName(__v: String): OrderInfo = copy(recipientsName = __v)
    def withRecipientsPhone(__v: String): OrderInfo = copy(recipientsPhone = __v)
    def withRecipientsAddress(__v: String): OrderInfo = copy(recipientsAddress = __v)
    def withRecipientsPostcode(__v: String): OrderInfo = copy(recipientsPostcode = __v)
    def withComment(__v: String): OrderInfo = copy(comment = __v)
    def clearCouponId = copy(couponId = scala.collection.Seq.empty)
    def addCouponId(__vs: String*): OrderInfo = addAllCouponId(__vs)
    def addAllCouponId(__vs: TraversableOnce[String]): OrderInfo = copy(couponId = couponId ++ __vs)
    def withCouponId(__v: scala.collection.Seq[String]): OrderInfo = copy(couponId = __v)
    def withDiscount(__v: Double): OrderInfo = copy(discount = __v)
    def withPayAmt(__v: Double): OrderInfo = copy(payAmt = __v)
    def withRealPayAmt(__v: Double): OrderInfo = copy(realPayAmt = __v)
    def withState(__v: com.echo.protocol.gold.OrderState): OrderInfo = copy(state = __v)
    def withCreateAt(__v: Long): OrderInfo = copy(createAt = __v)
    def withUpdateAt(__v: Long): OrderInfo = copy(updateAt = __v)
    def withExpireAt(__v: Long): OrderInfo = copy(expireAt = __v)
    def withPayAt(__v: Long): OrderInfo = copy(payAt = __v)
    def withDeliverAt(__v: Long): OrderInfo = copy(deliverAt = __v)
    def withDeliverConfirmAt(__v: Long): OrderInfo = copy(deliverConfirmAt = __v)
    def withRefundAt(__v: Long): OrderInfo = copy(refundAt = __v)
    def withRefundConfirmAt(__v: Long): OrderInfo = copy(refundConfirmAt = __v)
    def withCancelAt(__v: Long): OrderInfo = copy(cancelAt = __v)
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => {
          val __t = orderId
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = userId
          if (__t != "") __t else null
        }
        case 3 => products
        case 6 => {
          val __t = payMethod.valueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 7 => {
          val __t = deliverMethod.valueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 8 => {
          val __t = recipientsName
          if (__t != "") __t else null
        }
        case 9 => {
          val __t = recipientsPhone
          if (__t != "") __t else null
        }
        case 10 => {
          val __t = recipientsAddress
          if (__t != "") __t else null
        }
        case 11 => {
          val __t = recipientsPostcode
          if (__t != "") __t else null
        }
        case 12 => {
          val __t = comment
          if (__t != "") __t else null
        }
        case 13 => couponId
        case 22 => {
          val __t = discount
          if (__t != 0.0) __t else null
        }
        case 23 => {
          val __t = payAmt
          if (__t != 0.0) __t else null
        }
        case 24 => {
          val __t = realPayAmt
          if (__t != 0.0) __t else null
        }
        case 30 => {
          val __t = state.valueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 40 => {
          val __t = createAt
          if (__t != 0L) __t else null
        }
        case 41 => {
          val __t = updateAt
          if (__t != 0L) __t else null
        }
        case 42 => {
          val __t = expireAt
          if (__t != 0L) __t else null
        }
        case 43 => {
          val __t = payAt
          if (__t != 0L) __t else null
        }
        case 44 => {
          val __t = deliverAt
          if (__t != 0L) __t else null
        }
        case 45 => {
          val __t = deliverConfirmAt
          if (__t != 0L) __t else null
        }
        case 46 => {
          val __t = refundAt
          if (__t != 0L) __t else null
        }
        case 47 => {
          val __t = refundConfirmAt
          if (__t != 0L) __t else null
        }
        case 48 => {
          val __t = cancelAt
          if (__t != 0L) __t else null
        }
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.echo.protocol.gold.OrderInfo
}

object OrderInfo extends com.trueaccord.scalapb.GeneratedMessageCompanion[com.echo.protocol.gold.OrderInfo] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[com.echo.protocol.gold.OrderInfo] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.gold.OrderInfo = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    com.echo.protocol.gold.OrderInfo(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[scala.collection.Seq[com.echo.protocol.product.ProductInfo]],
      com.echo.protocol.gold.PayMethod.fromValue(__fieldsMap.getOrElse(__fields.get(3), com.echo.protocol.gold.PayMethod.PAY_METHOD_EMPTY.valueDescriptor).asInstanceOf[com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      com.echo.protocol.gold.DeliverMethod.fromValue(__fieldsMap.getOrElse(__fields.get(4), com.echo.protocol.gold.DeliverMethod.DELIVER_METHOD_EMPTY.valueDescriptor).asInstanceOf[com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      __fieldsMap.getOrElse(__fields.get(5), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(6), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(7), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(8), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(9), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(10), Nil).asInstanceOf[scala.collection.Seq[String]],
      __fieldsMap.getOrElse(__fields.get(11), 0.0).asInstanceOf[Double],
      __fieldsMap.getOrElse(__fields.get(12), 0.0).asInstanceOf[Double],
      __fieldsMap.getOrElse(__fields.get(13), 0.0).asInstanceOf[Double],
      com.echo.protocol.gold.OrderState.fromValue(__fieldsMap.getOrElse(__fields.get(14), com.echo.protocol.gold.OrderState.ORDER_STATE_EMPTY.valueDescriptor).asInstanceOf[com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      __fieldsMap.getOrElse(__fields.get(15), 0L).asInstanceOf[Long],
      __fieldsMap.getOrElse(__fields.get(16), 0L).asInstanceOf[Long],
      __fieldsMap.getOrElse(__fields.get(17), 0L).asInstanceOf[Long],
      __fieldsMap.getOrElse(__fields.get(18), 0L).asInstanceOf[Long],
      __fieldsMap.getOrElse(__fields.get(19), 0L).asInstanceOf[Long],
      __fieldsMap.getOrElse(__fields.get(20), 0L).asInstanceOf[Long],
      __fieldsMap.getOrElse(__fields.get(21), 0L).asInstanceOf[Long],
      __fieldsMap.getOrElse(__fields.get(22), 0L).asInstanceOf[Long],
      __fieldsMap.getOrElse(__fields.get(23), 0L).asInstanceOf[Long]
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = GoldProto.descriptor.getMessageTypes.get(20)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    require(__field.getContainingType() == descriptor, "FieldDescriptor does not match message type.")
    var __out: com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    __field.getNumber match {
      case 3 => __out = com.echo.protocol.product.ProductInfo
    }
  __out
  }
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    require(__field.getContainingType() == descriptor, "FieldDescriptor does not match message type.")
    __field.getNumber match {
      case 6 => com.echo.protocol.gold.PayMethod
      case 7 => com.echo.protocol.gold.DeliverMethod
      case 30 => com.echo.protocol.gold.OrderState
    }
  }
  lazy val defaultInstance = com.echo.protocol.gold.OrderInfo(
  )
  implicit class OrderInfoLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.gold.OrderInfo]) extends com.trueaccord.lenses.ObjectLens[UpperPB, com.echo.protocol.gold.OrderInfo](_l) {
    def orderId: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.orderId)((c_, f_) => c_.copy(orderId = f_))
    def userId: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.userId)((c_, f_) => c_.copy(userId = f_))
    def products: com.trueaccord.lenses.Lens[UpperPB, scala.collection.Seq[com.echo.protocol.product.ProductInfo]] = field(_.products)((c_, f_) => c_.copy(products = f_))
    def payMethod: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.gold.PayMethod] = field(_.payMethod)((c_, f_) => c_.copy(payMethod = f_))
    def deliverMethod: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.gold.DeliverMethod] = field(_.deliverMethod)((c_, f_) => c_.copy(deliverMethod = f_))
    def recipientsName: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.recipientsName)((c_, f_) => c_.copy(recipientsName = f_))
    def recipientsPhone: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.recipientsPhone)((c_, f_) => c_.copy(recipientsPhone = f_))
    def recipientsAddress: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.recipientsAddress)((c_, f_) => c_.copy(recipientsAddress = f_))
    def recipientsPostcode: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.recipientsPostcode)((c_, f_) => c_.copy(recipientsPostcode = f_))
    def comment: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.comment)((c_, f_) => c_.copy(comment = f_))
    def couponId: com.trueaccord.lenses.Lens[UpperPB, scala.collection.Seq[String]] = field(_.couponId)((c_, f_) => c_.copy(couponId = f_))
    def discount: com.trueaccord.lenses.Lens[UpperPB, Double] = field(_.discount)((c_, f_) => c_.copy(discount = f_))
    def payAmt: com.trueaccord.lenses.Lens[UpperPB, Double] = field(_.payAmt)((c_, f_) => c_.copy(payAmt = f_))
    def realPayAmt: com.trueaccord.lenses.Lens[UpperPB, Double] = field(_.realPayAmt)((c_, f_) => c_.copy(realPayAmt = f_))
    def state: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.gold.OrderState] = field(_.state)((c_, f_) => c_.copy(state = f_))
    def createAt: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.createAt)((c_, f_) => c_.copy(createAt = f_))
    def updateAt: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.updateAt)((c_, f_) => c_.copy(updateAt = f_))
    def expireAt: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.expireAt)((c_, f_) => c_.copy(expireAt = f_))
    def payAt: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.payAt)((c_, f_) => c_.copy(payAt = f_))
    def deliverAt: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.deliverAt)((c_, f_) => c_.copy(deliverAt = f_))
    def deliverConfirmAt: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.deliverConfirmAt)((c_, f_) => c_.copy(deliverConfirmAt = f_))
    def refundAt: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.refundAt)((c_, f_) => c_.copy(refundAt = f_))
    def refundConfirmAt: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.refundConfirmAt)((c_, f_) => c_.copy(refundConfirmAt = f_))
    def cancelAt: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.cancelAt)((c_, f_) => c_.copy(cancelAt = f_))
  }
  final val ORDER_ID_FIELD_NUMBER = 1
  final val USER_ID_FIELD_NUMBER = 2
  final val PRODUCTS_FIELD_NUMBER = 3
  final val PAY_METHOD_FIELD_NUMBER = 6
  final val DELIVER_METHOD_FIELD_NUMBER = 7
  final val RECIPIENTS_NAME_FIELD_NUMBER = 8
  final val RECIPIENTS_PHONE_FIELD_NUMBER = 9
  final val RECIPIENTS_ADDRESS_FIELD_NUMBER = 10
  final val RECIPIENTS_POSTCODE_FIELD_NUMBER = 11
  final val COMMENT_FIELD_NUMBER = 12
  final val COUPON_ID_FIELD_NUMBER = 13
  final val DISCOUNT_FIELD_NUMBER = 22
  final val PAY_AMT_FIELD_NUMBER = 23
  final val REAL_PAY_AMT_FIELD_NUMBER = 24
  final val STATE_FIELD_NUMBER = 30
  final val CREATE_AT_FIELD_NUMBER = 40
  final val UPDATE_AT_FIELD_NUMBER = 41
  final val EXPIRE_AT_FIELD_NUMBER = 42
  final val PAY_AT_FIELD_NUMBER = 43
  final val DELIVER_AT_FIELD_NUMBER = 44
  final val DELIVER_CONFIRM_AT_FIELD_NUMBER = 45
  final val REFUND_AT_FIELD_NUMBER = 46
  final val REFUND_CONFIRM_AT_FIELD_NUMBER = 47
  final val CANCEL_AT_FIELD_NUMBER = 48
}
