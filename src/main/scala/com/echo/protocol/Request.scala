// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.echo.protocol



@SerialVersionUID(0L)
final case class Request(
    content: com.echo.protocol.Request.Content = com.echo.protocol.Request.Content.Empty
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Request] with com.trueaccord.lenses.Updatable[Request] {
    @transient
    lazy val serializedSize: Int = {
      var __size = 0
      if (content.signupRequest.isDefined) { __size += 2 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(content.signupRequest.get.serializedSize) + content.signupRequest.get.serializedSize }
      if (content.loginRequest.isDefined) { __size += 2 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(content.loginRequest.get.serializedSize) + content.loginRequest.get.serializedSize }
      if (content.authenticationRequest.isDefined) { __size += 2 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(content.authenticationRequest.get.serializedSize) + content.authenticationRequest.get.serializedSize }
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      content.signupRequest.foreach { __v => 
        output.writeTag(101, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
      content.loginRequest.foreach { __v => 
        output.writeTag(102, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
      content.authenticationRequest.foreach { __v => 
        output.writeTag(103, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request = {
      var __content = this.content
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 810 =>
            __content = com.echo.protocol.Request.Content.SignupRequest(com.trueaccord.scalapb.LiteParser.readMessage(__input, content.signupRequest.getOrElse(com.echo.protocol.Request.SignupRequest.defaultInstance)))
          case 818 =>
            __content = com.echo.protocol.Request.Content.LoginRequest(com.trueaccord.scalapb.LiteParser.readMessage(__input, content.loginRequest.getOrElse(com.echo.protocol.Request.LoginRequest.defaultInstance)))
          case 826 =>
            __content = com.echo.protocol.Request.Content.AuthenticationRequest(com.trueaccord.scalapb.LiteParser.readMessage(__input, content.authenticationRequest.getOrElse(com.echo.protocol.Request.AuthenticationRequest.defaultInstance)))
          case tag => __input.skipField(tag)
        }
      }
      com.echo.protocol.Request(
          content = __content
      )
    }
    def getSignupRequest: com.echo.protocol.Request.SignupRequest = content.signupRequest.getOrElse(com.echo.protocol.Request.SignupRequest.defaultInstance)
    def withSignupRequest(__v: com.echo.protocol.Request.SignupRequest): Request = copy(content = com.echo.protocol.Request.Content.SignupRequest(__v))
    def getLoginRequest: com.echo.protocol.Request.LoginRequest = content.loginRequest.getOrElse(com.echo.protocol.Request.LoginRequest.defaultInstance)
    def withLoginRequest(__v: com.echo.protocol.Request.LoginRequest): Request = copy(content = com.echo.protocol.Request.Content.LoginRequest(__v))
    def getAuthenticationRequest: com.echo.protocol.Request.AuthenticationRequest = content.authenticationRequest.getOrElse(com.echo.protocol.Request.AuthenticationRequest.defaultInstance)
    def withAuthenticationRequest(__v: com.echo.protocol.Request.AuthenticationRequest): Request = copy(content = com.echo.protocol.Request.Content.AuthenticationRequest(__v))
    def clearContent: Request = copy(content = com.echo.protocol.Request.Content.Empty)
    def withContent(__v: com.echo.protocol.Request.Content): Request = copy(content = __v)
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 101 => content.signupRequest.getOrElse(null)
        case 102 => content.loginRequest.getOrElse(null)
        case 103 => content.authenticationRequest.getOrElse(null)
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.echo.protocol.Request
}

object Request extends com.trueaccord.scalapb.GeneratedMessageCompanion[Request] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[Request] = this
  def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    com.echo.protocol.Request(
      content = __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[com.echo.protocol.Request.SignupRequest]].map(com.echo.protocol.Request.Content.SignupRequest(_)) orElse
__fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.echo.protocol.Request.LoginRequest]].map(com.echo.protocol.Request.Content.LoginRequest(_)) orElse
__fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[com.echo.protocol.Request.AuthenticationRequest]].map(com.echo.protocol.Request.Content.AuthenticationRequest(_)) getOrElse com.echo.protocol.Request.Content.Empty
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = ProtocolComEchoProtocolProto.descriptor.getMessageTypes.get(0)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    require(__field.getContainingType() == descriptor, "FieldDescriptor does not match message type.")
    var __out: com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    __field.getNumber match {
      case 101 => __out = com.echo.protocol.Request.SignupRequest
      case 102 => __out = com.echo.protocol.Request.LoginRequest
      case 103 => __out = com.echo.protocol.Request.AuthenticationRequest
    }
  __out
  }
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = com.echo.protocol.Request(
  )
  sealed trait Content extends com.trueaccord.scalapb.GeneratedOneof {
    def isEmpty: Boolean = false
    def isDefined: Boolean = true
    def number: Int
    def isSignupRequest: Boolean = false
    def isLoginRequest: Boolean = false
    def isAuthenticationRequest: Boolean = false
    def signupRequest: scala.Option[com.echo.protocol.Request.SignupRequest] = None
    def loginRequest: scala.Option[com.echo.protocol.Request.LoginRequest] = None
    def authenticationRequest: scala.Option[com.echo.protocol.Request.AuthenticationRequest] = None
  }
  object Content extends {
    @SerialVersionUID(0L)
    case object Empty extends Content {
      override def isEmpty: Boolean = true
      override def isDefined: Boolean = false
      override def number: Int = 0
    }
  
    @SerialVersionUID(0L)
    case class SignupRequest(value: com.echo.protocol.Request.SignupRequest) extends Content {
      override def isSignupRequest: Boolean = true
      override def signupRequest: scala.Option[com.echo.protocol.Request.SignupRequest] = Some(value)
      override def number: Int = 101
    }
    @SerialVersionUID(0L)
    case class LoginRequest(value: com.echo.protocol.Request.LoginRequest) extends Content {
      override def isLoginRequest: Boolean = true
      override def loginRequest: scala.Option[com.echo.protocol.Request.LoginRequest] = Some(value)
      override def number: Int = 102
    }
    @SerialVersionUID(0L)
    case class AuthenticationRequest(value: com.echo.protocol.Request.AuthenticationRequest) extends Content {
      override def isAuthenticationRequest: Boolean = true
      override def authenticationRequest: scala.Option[com.echo.protocol.Request.AuthenticationRequest] = Some(value)
      override def number: Int = 103
    }
  }
  @SerialVersionUID(0L)
  final case class SignupRequest(
      userName: String = "",
      userPassword: String = ""
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[SignupRequest] with com.trueaccord.lenses.Updatable[SignupRequest] {
      @transient
      lazy val serializedSize: Int = {
        var __size = 0
        if (userName != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, userName) }
        if (userPassword != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(2, userPassword) }
        __size
      }
      def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
        {
          val __v = userName
          if (__v != "") {
            output.writeString(1, __v)
          }
        };
        {
          val __v = userPassword
          if (__v != "") {
            output.writeString(2, __v)
          }
        };
      }
      def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request.SignupRequest = {
        var __userName = this.userName
        var __userPassword = this.userPassword
        var _done__ = false
        while (!_done__) {
          val _tag__ = __input.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __userName = __input.readString()
            case 18 =>
              __userPassword = __input.readString()
            case tag => __input.skipField(tag)
          }
        }
        com.echo.protocol.Request.SignupRequest(
            userName = __userName,
            userPassword = __userPassword
        )
      }
      def withUserName(__v: String): SignupRequest = copy(userName = __v)
      def withUserPassword(__v: String): SignupRequest = copy(userPassword = __v)
      def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
        __field.getNumber match {
          case 1 => {
            val __t = userName
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = userPassword
            if (__t != "") __t else null
          }
        }
      }
      override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.echo.protocol.Request.SignupRequest
  }
  
  object SignupRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[SignupRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[SignupRequest] = this
    def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request.SignupRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
      val __fields = descriptor.getFields
      com.echo.protocol.Request.SignupRequest(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String]
      )
    }
    def descriptor: com.google.protobuf.Descriptors.Descriptor = com.echo.protocol.Request.descriptor.getNestedTypes.get(0)
    def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
    def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
    lazy val defaultInstance = com.echo.protocol.Request.SignupRequest(
    )
    implicit class SignupRequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, SignupRequest]) extends com.trueaccord.lenses.ObjectLens[UpperPB, SignupRequest](_l) {
      def userName: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.userName)((c_, f_) => c_.copy(userName = f_))
      def userPassword: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.userPassword)((c_, f_) => c_.copy(userPassword = f_))
    }
    final val USER_NAME_FIELD_NUMBER = 1
    final val USER_PASSWORD_FIELD_NUMBER = 2
  }
  
  @SerialVersionUID(0L)
  final case class LoginRequest(
      userName: String = "",
      userPassword: String = ""
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[LoginRequest] with com.trueaccord.lenses.Updatable[LoginRequest] {
      @transient
      lazy val serializedSize: Int = {
        var __size = 0
        if (userName != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, userName) }
        if (userPassword != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(2, userPassword) }
        __size
      }
      def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
        {
          val __v = userName
          if (__v != "") {
            output.writeString(1, __v)
          }
        };
        {
          val __v = userPassword
          if (__v != "") {
            output.writeString(2, __v)
          }
        };
      }
      def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request.LoginRequest = {
        var __userName = this.userName
        var __userPassword = this.userPassword
        var _done__ = false
        while (!_done__) {
          val _tag__ = __input.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __userName = __input.readString()
            case 18 =>
              __userPassword = __input.readString()
            case tag => __input.skipField(tag)
          }
        }
        com.echo.protocol.Request.LoginRequest(
            userName = __userName,
            userPassword = __userPassword
        )
      }
      def withUserName(__v: String): LoginRequest = copy(userName = __v)
      def withUserPassword(__v: String): LoginRequest = copy(userPassword = __v)
      def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
        __field.getNumber match {
          case 1 => {
            val __t = userName
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = userPassword
            if (__t != "") __t else null
          }
        }
      }
      override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.echo.protocol.Request.LoginRequest
  }
  
  object LoginRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[LoginRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[LoginRequest] = this
    def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request.LoginRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
      val __fields = descriptor.getFields
      com.echo.protocol.Request.LoginRequest(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String]
      )
    }
    def descriptor: com.google.protobuf.Descriptors.Descriptor = com.echo.protocol.Request.descriptor.getNestedTypes.get(1)
    def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
    def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
    lazy val defaultInstance = com.echo.protocol.Request.LoginRequest(
    )
    implicit class LoginRequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, LoginRequest]) extends com.trueaccord.lenses.ObjectLens[UpperPB, LoginRequest](_l) {
      def userName: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.userName)((c_, f_) => c_.copy(userName = f_))
      def userPassword: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.userPassword)((c_, f_) => c_.copy(userPassword = f_))
    }
    final val USER_NAME_FIELD_NUMBER = 1
    final val USER_PASSWORD_FIELD_NUMBER = 2
  }
  
  @SerialVersionUID(0L)
  final case class AuthenticationRequest(
      token: String = ""
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[AuthenticationRequest] with com.trueaccord.lenses.Updatable[AuthenticationRequest] {
      @transient
      lazy val serializedSize: Int = {
        var __size = 0
        if (token != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, token) }
        __size
      }
      def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
        {
          val __v = token
          if (__v != "") {
            output.writeString(1, __v)
          }
        };
      }
      def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request.AuthenticationRequest = {
        var __token = this.token
        var _done__ = false
        while (!_done__) {
          val _tag__ = __input.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __token = __input.readString()
            case tag => __input.skipField(tag)
          }
        }
        com.echo.protocol.Request.AuthenticationRequest(
            token = __token
        )
      }
      def withToken(__v: String): AuthenticationRequest = copy(token = __v)
      def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
        __field.getNumber match {
          case 1 => {
            val __t = token
            if (__t != "") __t else null
          }
        }
      }
      override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.echo.protocol.Request.AuthenticationRequest
  }
  
  object AuthenticationRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[AuthenticationRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[AuthenticationRequest] = this
    def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request.AuthenticationRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
      val __fields = descriptor.getFields
      com.echo.protocol.Request.AuthenticationRequest(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String]
      )
    }
    def descriptor: com.google.protobuf.Descriptors.Descriptor = com.echo.protocol.Request.descriptor.getNestedTypes.get(2)
    def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
    def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
    lazy val defaultInstance = com.echo.protocol.Request.AuthenticationRequest(
    )
    implicit class AuthenticationRequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, AuthenticationRequest]) extends com.trueaccord.lenses.ObjectLens[UpperPB, AuthenticationRequest](_l) {
      def token: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.token)((c_, f_) => c_.copy(token = f_))
    }
    final val TOKEN_FIELD_NUMBER = 1
  }
  
  implicit class RequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, Request]) extends com.trueaccord.lenses.ObjectLens[UpperPB, Request](_l) {
    def signupRequest: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.SignupRequest] = field(_.getSignupRequest)((c_, f_) => c_.copy(content = com.echo.protocol.Request.Content.SignupRequest(f_)))
    def loginRequest: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.LoginRequest] = field(_.getLoginRequest)((c_, f_) => c_.copy(content = com.echo.protocol.Request.Content.LoginRequest(f_)))
    def authenticationRequest: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.AuthenticationRequest] = field(_.getAuthenticationRequest)((c_, f_) => c_.copy(content = com.echo.protocol.Request.Content.AuthenticationRequest(f_)))
    def content: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.Content] = field(_.content)((c_, f_) => c_.copy(content = f_))
  }
  final val SIGNUP_REQUEST_FIELD_NUMBER = 101
  final val LOGIN_REQUEST_FIELD_NUMBER = 102
  final val AUTHENTICATION_REQUEST_FIELD_NUMBER = 103
}
