// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.echo.protocol



@SerialVersionUID(0L)
final case class Request(
    content: com.echo.protocol.Request.Content = com.echo.protocol.Request.Content.Empty
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Request] with com.trueaccord.lenses.Updatable[Request] {
    @transient
    lazy val serializedSize: Int = {
      var __size = 0
      if (content.signupRequest.isDefined) { __size += 2 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(content.signupRequest.get.serializedSize) + content.signupRequest.get.serializedSize }
      if (content.loginRequest.isDefined) { __size += 2 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(content.loginRequest.get.serializedSize) + content.loginRequest.get.serializedSize }
      if (content.authenticationRequest.isDefined) { __size += 2 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(content.authenticationRequest.get.serializedSize) + content.authenticationRequest.get.serializedSize }
      if (content.logoutRequest.isDefined) { __size += 2 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(content.logoutRequest.get.serializedSize) + content.logoutRequest.get.serializedSize }
      if (content.queryUserInfoRequest.isDefined) { __size += 2 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(content.queryUserInfoRequest.get.serializedSize) + content.queryUserInfoRequest.get.serializedSize }
      if (content.updateUserInfoRequest.isDefined) { __size += 2 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(content.updateUserInfoRequest.get.serializedSize) + content.updateUserInfoRequest.get.serializedSize }
      if (content.addUserAddressRequest.isDefined) { __size += 2 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(content.addUserAddressRequest.get.serializedSize) + content.addUserAddressRequest.get.serializedSize }
      if (content.updateUserAddressRequest.isDefined) { __size += 2 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(content.updateUserAddressRequest.get.serializedSize) + content.updateUserAddressRequest.get.serializedSize }
      if (content.deleteUserAddressRequest.isDefined) { __size += 2 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(content.deleteUserAddressRequest.get.serializedSize) + content.deleteUserAddressRequest.get.serializedSize }
      __size
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      content.signupRequest.foreach { __v => 
        output.writeTag(1001, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
      content.loginRequest.foreach { __v => 
        output.writeTag(1002, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
      content.authenticationRequest.foreach { __v => 
        output.writeTag(1003, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
      content.logoutRequest.foreach { __v => 
        output.writeTag(1004, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
      content.queryUserInfoRequest.foreach { __v => 
        output.writeTag(1005, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
      content.updateUserInfoRequest.foreach { __v => 
        output.writeTag(1006, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
      content.addUserAddressRequest.foreach { __v => 
        output.writeTag(1100, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
      content.updateUserAddressRequest.foreach { __v => 
        output.writeTag(1101, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
      content.deleteUserAddressRequest.foreach { __v => 
        output.writeTag(1102, 2)
        output.writeRawVarint32(__v.serializedSize)
        __v.writeTo(output)
      };
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request = {
      var __content = this.content
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8010 =>
            __content = com.echo.protocol.Request.Content.SignupRequest(com.trueaccord.scalapb.LiteParser.readMessage(__input, content.signupRequest.getOrElse(com.echo.protocol.Request.SignupRequest.defaultInstance)))
          case 8018 =>
            __content = com.echo.protocol.Request.Content.LoginRequest(com.trueaccord.scalapb.LiteParser.readMessage(__input, content.loginRequest.getOrElse(com.echo.protocol.Request.LoginRequest.defaultInstance)))
          case 8026 =>
            __content = com.echo.protocol.Request.Content.AuthenticationRequest(com.trueaccord.scalapb.LiteParser.readMessage(__input, content.authenticationRequest.getOrElse(com.echo.protocol.Request.AuthenticationRequest.defaultInstance)))
          case 8034 =>
            __content = com.echo.protocol.Request.Content.LogoutRequest(com.trueaccord.scalapb.LiteParser.readMessage(__input, content.logoutRequest.getOrElse(com.echo.protocol.Request.LogoutRequest.defaultInstance)))
          case 8042 =>
            __content = com.echo.protocol.Request.Content.QueryUserInfoRequest(com.trueaccord.scalapb.LiteParser.readMessage(__input, content.queryUserInfoRequest.getOrElse(com.echo.protocol.Request.QueryUserInfoRequest.defaultInstance)))
          case 8050 =>
            __content = com.echo.protocol.Request.Content.UpdateUserInfoRequest(com.trueaccord.scalapb.LiteParser.readMessage(__input, content.updateUserInfoRequest.getOrElse(com.echo.protocol.Request.UpdateUserInfoRequest.defaultInstance)))
          case 8802 =>
            __content = com.echo.protocol.Request.Content.AddUserAddressRequest(com.trueaccord.scalapb.LiteParser.readMessage(__input, content.addUserAddressRequest.getOrElse(com.echo.protocol.Request.AddUserAddressRequest.defaultInstance)))
          case 8810 =>
            __content = com.echo.protocol.Request.Content.UpdateUserAddressRequest(com.trueaccord.scalapb.LiteParser.readMessage(__input, content.updateUserAddressRequest.getOrElse(com.echo.protocol.Request.UpdateUserAddressRequest.defaultInstance)))
          case 8818 =>
            __content = com.echo.protocol.Request.Content.DeleteUserAddressRequest(com.trueaccord.scalapb.LiteParser.readMessage(__input, content.deleteUserAddressRequest.getOrElse(com.echo.protocol.Request.DeleteUserAddressRequest.defaultInstance)))
          case tag => __input.skipField(tag)
        }
      }
      com.echo.protocol.Request(
          content = __content
      )
    }
    def getSignupRequest: com.echo.protocol.Request.SignupRequest = content.signupRequest.getOrElse(com.echo.protocol.Request.SignupRequest.defaultInstance)
    def withSignupRequest(__v: com.echo.protocol.Request.SignupRequest): Request = copy(content = com.echo.protocol.Request.Content.SignupRequest(__v))
    def getLoginRequest: com.echo.protocol.Request.LoginRequest = content.loginRequest.getOrElse(com.echo.protocol.Request.LoginRequest.defaultInstance)
    def withLoginRequest(__v: com.echo.protocol.Request.LoginRequest): Request = copy(content = com.echo.protocol.Request.Content.LoginRequest(__v))
    def getAuthenticationRequest: com.echo.protocol.Request.AuthenticationRequest = content.authenticationRequest.getOrElse(com.echo.protocol.Request.AuthenticationRequest.defaultInstance)
    def withAuthenticationRequest(__v: com.echo.protocol.Request.AuthenticationRequest): Request = copy(content = com.echo.protocol.Request.Content.AuthenticationRequest(__v))
    def getLogoutRequest: com.echo.protocol.Request.LogoutRequest = content.logoutRequest.getOrElse(com.echo.protocol.Request.LogoutRequest.defaultInstance)
    def withLogoutRequest(__v: com.echo.protocol.Request.LogoutRequest): Request = copy(content = com.echo.protocol.Request.Content.LogoutRequest(__v))
    def getQueryUserInfoRequest: com.echo.protocol.Request.QueryUserInfoRequest = content.queryUserInfoRequest.getOrElse(com.echo.protocol.Request.QueryUserInfoRequest.defaultInstance)
    def withQueryUserInfoRequest(__v: com.echo.protocol.Request.QueryUserInfoRequest): Request = copy(content = com.echo.protocol.Request.Content.QueryUserInfoRequest(__v))
    def getUpdateUserInfoRequest: com.echo.protocol.Request.UpdateUserInfoRequest = content.updateUserInfoRequest.getOrElse(com.echo.protocol.Request.UpdateUserInfoRequest.defaultInstance)
    def withUpdateUserInfoRequest(__v: com.echo.protocol.Request.UpdateUserInfoRequest): Request = copy(content = com.echo.protocol.Request.Content.UpdateUserInfoRequest(__v))
    def getAddUserAddressRequest: com.echo.protocol.Request.AddUserAddressRequest = content.addUserAddressRequest.getOrElse(com.echo.protocol.Request.AddUserAddressRequest.defaultInstance)
    def withAddUserAddressRequest(__v: com.echo.protocol.Request.AddUserAddressRequest): Request = copy(content = com.echo.protocol.Request.Content.AddUserAddressRequest(__v))
    def getUpdateUserAddressRequest: com.echo.protocol.Request.UpdateUserAddressRequest = content.updateUserAddressRequest.getOrElse(com.echo.protocol.Request.UpdateUserAddressRequest.defaultInstance)
    def withUpdateUserAddressRequest(__v: com.echo.protocol.Request.UpdateUserAddressRequest): Request = copy(content = com.echo.protocol.Request.Content.UpdateUserAddressRequest(__v))
    def getDeleteUserAddressRequest: com.echo.protocol.Request.DeleteUserAddressRequest = content.deleteUserAddressRequest.getOrElse(com.echo.protocol.Request.DeleteUserAddressRequest.defaultInstance)
    def withDeleteUserAddressRequest(__v: com.echo.protocol.Request.DeleteUserAddressRequest): Request = copy(content = com.echo.protocol.Request.Content.DeleteUserAddressRequest(__v))
    def clearContent: Request = copy(content = com.echo.protocol.Request.Content.Empty)
    def withContent(__v: com.echo.protocol.Request.Content): Request = copy(content = __v)
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1001 => content.signupRequest.getOrElse(null)
        case 1002 => content.loginRequest.getOrElse(null)
        case 1003 => content.authenticationRequest.getOrElse(null)
        case 1004 => content.logoutRequest.getOrElse(null)
        case 1005 => content.queryUserInfoRequest.getOrElse(null)
        case 1006 => content.updateUserInfoRequest.getOrElse(null)
        case 1100 => content.addUserAddressRequest.getOrElse(null)
        case 1101 => content.updateUserAddressRequest.getOrElse(null)
        case 1102 => content.deleteUserAddressRequest.getOrElse(null)
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.echo.protocol.Request
}

object Request extends com.trueaccord.scalapb.GeneratedMessageCompanion[Request] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[Request] = this
  def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    com.echo.protocol.Request(
      content = __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[com.echo.protocol.Request.SignupRequest]].map(com.echo.protocol.Request.Content.SignupRequest(_)) orElse
__fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.echo.protocol.Request.LoginRequest]].map(com.echo.protocol.Request.Content.LoginRequest(_)) orElse
__fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[com.echo.protocol.Request.AuthenticationRequest]].map(com.echo.protocol.Request.Content.AuthenticationRequest(_)) orElse
__fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[com.echo.protocol.Request.LogoutRequest]].map(com.echo.protocol.Request.Content.LogoutRequest(_)) orElse
__fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[com.echo.protocol.Request.QueryUserInfoRequest]].map(com.echo.protocol.Request.Content.QueryUserInfoRequest(_)) orElse
__fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[com.echo.protocol.Request.UpdateUserInfoRequest]].map(com.echo.protocol.Request.Content.UpdateUserInfoRequest(_)) orElse
__fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[com.echo.protocol.Request.AddUserAddressRequest]].map(com.echo.protocol.Request.Content.AddUserAddressRequest(_)) orElse
__fieldsMap.get(__fields.get(7)).asInstanceOf[scala.Option[com.echo.protocol.Request.UpdateUserAddressRequest]].map(com.echo.protocol.Request.Content.UpdateUserAddressRequest(_)) orElse
__fieldsMap.get(__fields.get(8)).asInstanceOf[scala.Option[com.echo.protocol.Request.DeleteUserAddressRequest]].map(com.echo.protocol.Request.Content.DeleteUserAddressRequest(_)) getOrElse com.echo.protocol.Request.Content.Empty
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = ProtocolProtocolProto.descriptor.getMessageTypes.get(2)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    require(__field.getContainingType() == descriptor, "FieldDescriptor does not match message type.")
    var __out: com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    __field.getNumber match {
      case 1001 => __out = com.echo.protocol.Request.SignupRequest
      case 1002 => __out = com.echo.protocol.Request.LoginRequest
      case 1003 => __out = com.echo.protocol.Request.AuthenticationRequest
      case 1004 => __out = com.echo.protocol.Request.LogoutRequest
      case 1005 => __out = com.echo.protocol.Request.QueryUserInfoRequest
      case 1006 => __out = com.echo.protocol.Request.UpdateUserInfoRequest
      case 1100 => __out = com.echo.protocol.Request.AddUserAddressRequest
      case 1101 => __out = com.echo.protocol.Request.UpdateUserAddressRequest
      case 1102 => __out = com.echo.protocol.Request.DeleteUserAddressRequest
    }
  __out
  }
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = com.echo.protocol.Request(
  )
  sealed trait Content extends com.trueaccord.scalapb.GeneratedOneof {
    def isEmpty: Boolean = false
    def isDefined: Boolean = true
    def number: Int
    def isSignupRequest: Boolean = false
    def isLoginRequest: Boolean = false
    def isAuthenticationRequest: Boolean = false
    def isLogoutRequest: Boolean = false
    def isQueryUserInfoRequest: Boolean = false
    def isUpdateUserInfoRequest: Boolean = false
    def isAddUserAddressRequest: Boolean = false
    def isUpdateUserAddressRequest: Boolean = false
    def isDeleteUserAddressRequest: Boolean = false
    def signupRequest: scala.Option[com.echo.protocol.Request.SignupRequest] = None
    def loginRequest: scala.Option[com.echo.protocol.Request.LoginRequest] = None
    def authenticationRequest: scala.Option[com.echo.protocol.Request.AuthenticationRequest] = None
    def logoutRequest: scala.Option[com.echo.protocol.Request.LogoutRequest] = None
    def queryUserInfoRequest: scala.Option[com.echo.protocol.Request.QueryUserInfoRequest] = None
    def updateUserInfoRequest: scala.Option[com.echo.protocol.Request.UpdateUserInfoRequest] = None
    def addUserAddressRequest: scala.Option[com.echo.protocol.Request.AddUserAddressRequest] = None
    def updateUserAddressRequest: scala.Option[com.echo.protocol.Request.UpdateUserAddressRequest] = None
    def deleteUserAddressRequest: scala.Option[com.echo.protocol.Request.DeleteUserAddressRequest] = None
  }
  object Content extends {
    @SerialVersionUID(0L)
    case object Empty extends Content {
      override def isEmpty: Boolean = true
      override def isDefined: Boolean = false
      override def number: Int = 0
    }
  
    @SerialVersionUID(0L)
    case class SignupRequest(value: com.echo.protocol.Request.SignupRequest) extends Content {
      override def isSignupRequest: Boolean = true
      override def signupRequest: scala.Option[com.echo.protocol.Request.SignupRequest] = Some(value)
      override def number: Int = 1001
    }
    @SerialVersionUID(0L)
    case class LoginRequest(value: com.echo.protocol.Request.LoginRequest) extends Content {
      override def isLoginRequest: Boolean = true
      override def loginRequest: scala.Option[com.echo.protocol.Request.LoginRequest] = Some(value)
      override def number: Int = 1002
    }
    @SerialVersionUID(0L)
    case class AuthenticationRequest(value: com.echo.protocol.Request.AuthenticationRequest) extends Content {
      override def isAuthenticationRequest: Boolean = true
      override def authenticationRequest: scala.Option[com.echo.protocol.Request.AuthenticationRequest] = Some(value)
      override def number: Int = 1003
    }
    @SerialVersionUID(0L)
    case class LogoutRequest(value: com.echo.protocol.Request.LogoutRequest) extends Content {
      override def isLogoutRequest: Boolean = true
      override def logoutRequest: scala.Option[com.echo.protocol.Request.LogoutRequest] = Some(value)
      override def number: Int = 1004
    }
    @SerialVersionUID(0L)
    case class QueryUserInfoRequest(value: com.echo.protocol.Request.QueryUserInfoRequest) extends Content {
      override def isQueryUserInfoRequest: Boolean = true
      override def queryUserInfoRequest: scala.Option[com.echo.protocol.Request.QueryUserInfoRequest] = Some(value)
      override def number: Int = 1005
    }
    @SerialVersionUID(0L)
    case class UpdateUserInfoRequest(value: com.echo.protocol.Request.UpdateUserInfoRequest) extends Content {
      override def isUpdateUserInfoRequest: Boolean = true
      override def updateUserInfoRequest: scala.Option[com.echo.protocol.Request.UpdateUserInfoRequest] = Some(value)
      override def number: Int = 1006
    }
    @SerialVersionUID(0L)
    case class AddUserAddressRequest(value: com.echo.protocol.Request.AddUserAddressRequest) extends Content {
      override def isAddUserAddressRequest: Boolean = true
      override def addUserAddressRequest: scala.Option[com.echo.protocol.Request.AddUserAddressRequest] = Some(value)
      override def number: Int = 1100
    }
    @SerialVersionUID(0L)
    case class UpdateUserAddressRequest(value: com.echo.protocol.Request.UpdateUserAddressRequest) extends Content {
      override def isUpdateUserAddressRequest: Boolean = true
      override def updateUserAddressRequest: scala.Option[com.echo.protocol.Request.UpdateUserAddressRequest] = Some(value)
      override def number: Int = 1101
    }
    @SerialVersionUID(0L)
    case class DeleteUserAddressRequest(value: com.echo.protocol.Request.DeleteUserAddressRequest) extends Content {
      override def isDeleteUserAddressRequest: Boolean = true
      override def deleteUserAddressRequest: scala.Option[com.echo.protocol.Request.DeleteUserAddressRequest] = Some(value)
      override def number: Int = 1102
    }
  }
  @SerialVersionUID(0L)
  final case class SignupRequest(
      phonenum: String = "",
      password: String = ""
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[SignupRequest] with com.trueaccord.lenses.Updatable[SignupRequest] {
      @transient
      lazy val serializedSize: Int = {
        var __size = 0
        if (phonenum != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, phonenum) }
        if (password != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(2, password) }
        __size
      }
      def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
        {
          val __v = phonenum
          if (__v != "") {
            output.writeString(1, __v)
          }
        };
        {
          val __v = password
          if (__v != "") {
            output.writeString(2, __v)
          }
        };
      }
      def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request.SignupRequest = {
        var __phonenum = this.phonenum
        var __password = this.password
        var _done__ = false
        while (!_done__) {
          val _tag__ = __input.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __phonenum = __input.readString()
            case 18 =>
              __password = __input.readString()
            case tag => __input.skipField(tag)
          }
        }
        com.echo.protocol.Request.SignupRequest(
            phonenum = __phonenum,
            password = __password
        )
      }
      def withPhonenum(__v: String): SignupRequest = copy(phonenum = __v)
      def withPassword(__v: String): SignupRequest = copy(password = __v)
      def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
        __field.getNumber match {
          case 1 => {
            val __t = phonenum
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = password
            if (__t != "") __t else null
          }
        }
      }
      override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.echo.protocol.Request.SignupRequest
  }
  
  object SignupRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[SignupRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[SignupRequest] = this
    def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request.SignupRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
      val __fields = descriptor.getFields
      com.echo.protocol.Request.SignupRequest(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String]
      )
    }
    def descriptor: com.google.protobuf.Descriptors.Descriptor = com.echo.protocol.Request.descriptor.getNestedTypes.get(0)
    def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
    def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
    lazy val defaultInstance = com.echo.protocol.Request.SignupRequest(
    )
    implicit class SignupRequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, SignupRequest]) extends com.trueaccord.lenses.ObjectLens[UpperPB, SignupRequest](_l) {
      def phonenum: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.phonenum)((c_, f_) => c_.copy(phonenum = f_))
      def password: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.password)((c_, f_) => c_.copy(password = f_))
    }
    final val PHONENUM_FIELD_NUMBER = 1
    final val PASSWORD_FIELD_NUMBER = 2
  }
  
  @SerialVersionUID(0L)
  final case class LoginRequest(
      password: String = "",
      name: com.echo.protocol.Request.LoginRequest.Name = com.echo.protocol.Request.LoginRequest.Name.Empty
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[LoginRequest] with com.trueaccord.lenses.Updatable[LoginRequest] {
      @transient
      lazy val serializedSize: Int = {
        var __size = 0
        if (name.phonenum.isDefined) { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, name.phonenum.get) }
        if (name.email.isDefined) { __size += com.google.protobuf.CodedOutputStream.computeStringSize(2, name.email.get) }
        if (password != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(10, password) }
        __size
      }
      def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
        name.phonenum.foreach { __v => 
          output.writeString(1, __v)
        };
        name.email.foreach { __v => 
          output.writeString(2, __v)
        };
        {
          val __v = password
          if (__v != "") {
            output.writeString(10, __v)
          }
        };
      }
      def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request.LoginRequest = {
        var __password = this.password
        var __name = this.name
        var _done__ = false
        while (!_done__) {
          val _tag__ = __input.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __name = com.echo.protocol.Request.LoginRequest.Name.Phonenum(__input.readString())
            case 18 =>
              __name = com.echo.protocol.Request.LoginRequest.Name.Email(__input.readString())
            case 82 =>
              __password = __input.readString()
            case tag => __input.skipField(tag)
          }
        }
        com.echo.protocol.Request.LoginRequest(
            password = __password,
            name = __name
        )
      }
      def getPhonenum: String = name.phonenum.getOrElse("")
      def withPhonenum(__v: String): LoginRequest = copy(name = com.echo.protocol.Request.LoginRequest.Name.Phonenum(__v))
      def getEmail: String = name.email.getOrElse("")
      def withEmail(__v: String): LoginRequest = copy(name = com.echo.protocol.Request.LoginRequest.Name.Email(__v))
      def withPassword(__v: String): LoginRequest = copy(password = __v)
      def clearName: LoginRequest = copy(name = com.echo.protocol.Request.LoginRequest.Name.Empty)
      def withName(__v: com.echo.protocol.Request.LoginRequest.Name): LoginRequest = copy(name = __v)
      def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
        __field.getNumber match {
          case 1 => name.phonenum.getOrElse(null)
          case 2 => name.email.getOrElse(null)
          case 10 => {
            val __t = password
            if (__t != "") __t else null
          }
        }
      }
      override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.echo.protocol.Request.LoginRequest
  }
  
  object LoginRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[LoginRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[LoginRequest] = this
    def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request.LoginRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
      val __fields = descriptor.getFields
      com.echo.protocol.Request.LoginRequest(
        __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[String],
        name = __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[String]].map(com.echo.protocol.Request.LoginRequest.Name.Phonenum(_)) orElse
__fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]].map(com.echo.protocol.Request.LoginRequest.Name.Email(_)) getOrElse com.echo.protocol.Request.LoginRequest.Name.Empty
      )
    }
    def descriptor: com.google.protobuf.Descriptors.Descriptor = com.echo.protocol.Request.descriptor.getNestedTypes.get(1)
    def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
    def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
    lazy val defaultInstance = com.echo.protocol.Request.LoginRequest(
    )
    sealed trait Name extends com.trueaccord.scalapb.GeneratedOneof {
      def isEmpty: Boolean = false
      def isDefined: Boolean = true
      def number: Int
      def isPhonenum: Boolean = false
      def isEmail: Boolean = false
      def phonenum: scala.Option[String] = None
      def email: scala.Option[String] = None
    }
    object Name extends {
      @SerialVersionUID(0L)
      case object Empty extends Name {
        override def isEmpty: Boolean = true
        override def isDefined: Boolean = false
        override def number: Int = 0
      }
    
      @SerialVersionUID(0L)
      case class Phonenum(value: String) extends Name {
        override def isPhonenum: Boolean = true
        override def phonenum: scala.Option[String] = Some(value)
        override def number: Int = 1
      }
      @SerialVersionUID(0L)
      case class Email(value: String) extends Name {
        override def isEmail: Boolean = true
        override def email: scala.Option[String] = Some(value)
        override def number: Int = 2
      }
    }
    implicit class LoginRequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, LoginRequest]) extends com.trueaccord.lenses.ObjectLens[UpperPB, LoginRequest](_l) {
      def phonenum: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getPhonenum)((c_, f_) => c_.copy(name = com.echo.protocol.Request.LoginRequest.Name.Phonenum(f_)))
      def email: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getEmail)((c_, f_) => c_.copy(name = com.echo.protocol.Request.LoginRequest.Name.Email(f_)))
      def password: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.password)((c_, f_) => c_.copy(password = f_))
      def name: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.LoginRequest.Name] = field(_.name)((c_, f_) => c_.copy(name = f_))
    }
    final val PHONENUM_FIELD_NUMBER = 1
    final val EMAIL_FIELD_NUMBER = 2
    final val PASSWORD_FIELD_NUMBER = 10
  }
  
  @SerialVersionUID(0L)
  final case class AuthenticationRequest(
      token: String = ""
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[AuthenticationRequest] with com.trueaccord.lenses.Updatable[AuthenticationRequest] {
      @transient
      lazy val serializedSize: Int = {
        var __size = 0
        if (token != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, token) }
        __size
      }
      def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
        {
          val __v = token
          if (__v != "") {
            output.writeString(1, __v)
          }
        };
      }
      def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request.AuthenticationRequest = {
        var __token = this.token
        var _done__ = false
        while (!_done__) {
          val _tag__ = __input.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __token = __input.readString()
            case tag => __input.skipField(tag)
          }
        }
        com.echo.protocol.Request.AuthenticationRequest(
            token = __token
        )
      }
      def withToken(__v: String): AuthenticationRequest = copy(token = __v)
      def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
        __field.getNumber match {
          case 1 => {
            val __t = token
            if (__t != "") __t else null
          }
        }
      }
      override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.echo.protocol.Request.AuthenticationRequest
  }
  
  object AuthenticationRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[AuthenticationRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[AuthenticationRequest] = this
    def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request.AuthenticationRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
      val __fields = descriptor.getFields
      com.echo.protocol.Request.AuthenticationRequest(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String]
      )
    }
    def descriptor: com.google.protobuf.Descriptors.Descriptor = com.echo.protocol.Request.descriptor.getNestedTypes.get(2)
    def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
    def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
    lazy val defaultInstance = com.echo.protocol.Request.AuthenticationRequest(
    )
    implicit class AuthenticationRequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, AuthenticationRequest]) extends com.trueaccord.lenses.ObjectLens[UpperPB, AuthenticationRequest](_l) {
      def token: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.token)((c_, f_) => c_.copy(token = f_))
    }
    final val TOKEN_FIELD_NUMBER = 1
  }
  
  @SerialVersionUID(0L)
  final case class LogoutRequest(
      token: String = ""
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[LogoutRequest] with com.trueaccord.lenses.Updatable[LogoutRequest] {
      @transient
      lazy val serializedSize: Int = {
        var __size = 0
        if (token != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, token) }
        __size
      }
      def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
        {
          val __v = token
          if (__v != "") {
            output.writeString(1, __v)
          }
        };
      }
      def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request.LogoutRequest = {
        var __token = this.token
        var _done__ = false
        while (!_done__) {
          val _tag__ = __input.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __token = __input.readString()
            case tag => __input.skipField(tag)
          }
        }
        com.echo.protocol.Request.LogoutRequest(
            token = __token
        )
      }
      def withToken(__v: String): LogoutRequest = copy(token = __v)
      def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
        __field.getNumber match {
          case 1 => {
            val __t = token
            if (__t != "") __t else null
          }
        }
      }
      override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.echo.protocol.Request.LogoutRequest
  }
  
  object LogoutRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[LogoutRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[LogoutRequest] = this
    def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request.LogoutRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
      val __fields = descriptor.getFields
      com.echo.protocol.Request.LogoutRequest(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String]
      )
    }
    def descriptor: com.google.protobuf.Descriptors.Descriptor = com.echo.protocol.Request.descriptor.getNestedTypes.get(3)
    def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
    def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
    lazy val defaultInstance = com.echo.protocol.Request.LogoutRequest(
    )
    implicit class LogoutRequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, LogoutRequest]) extends com.trueaccord.lenses.ObjectLens[UpperPB, LogoutRequest](_l) {
      def token: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.token)((c_, f_) => c_.copy(token = f_))
    }
    final val TOKEN_FIELD_NUMBER = 1
  }
  
  @SerialVersionUID(0L)
  final case class QueryUserInfoRequest(
      token: String = "",
      queryUserId: Boolean = false,
      queryUsername: Boolean = false,
      queryEmail: Boolean = false,
      queryPhonenum: Boolean = false,
      querySecurityQuestions: Boolean = false,
      queryAddresses: Boolean = false
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[QueryUserInfoRequest] with com.trueaccord.lenses.Updatable[QueryUserInfoRequest] {
      @transient
      lazy val serializedSize: Int = {
        var __size = 0
        if (token != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, token) }
        if (queryUserId != false) { __size += com.google.protobuf.CodedOutputStream.computeBoolSize(2, queryUserId) }
        if (queryUsername != false) { __size += com.google.protobuf.CodedOutputStream.computeBoolSize(3, queryUsername) }
        if (queryEmail != false) { __size += com.google.protobuf.CodedOutputStream.computeBoolSize(4, queryEmail) }
        if (queryPhonenum != false) { __size += com.google.protobuf.CodedOutputStream.computeBoolSize(5, queryPhonenum) }
        if (querySecurityQuestions != false) { __size += com.google.protobuf.CodedOutputStream.computeBoolSize(6, querySecurityQuestions) }
        if (queryAddresses != false) { __size += com.google.protobuf.CodedOutputStream.computeBoolSize(7, queryAddresses) }
        __size
      }
      def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
        {
          val __v = token
          if (__v != "") {
            output.writeString(1, __v)
          }
        };
        {
          val __v = queryUserId
          if (__v != false) {
            output.writeBool(2, __v)
          }
        };
        {
          val __v = queryUsername
          if (__v != false) {
            output.writeBool(3, __v)
          }
        };
        {
          val __v = queryEmail
          if (__v != false) {
            output.writeBool(4, __v)
          }
        };
        {
          val __v = queryPhonenum
          if (__v != false) {
            output.writeBool(5, __v)
          }
        };
        {
          val __v = querySecurityQuestions
          if (__v != false) {
            output.writeBool(6, __v)
          }
        };
        {
          val __v = queryAddresses
          if (__v != false) {
            output.writeBool(7, __v)
          }
        };
      }
      def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request.QueryUserInfoRequest = {
        var __token = this.token
        var __queryUserId = this.queryUserId
        var __queryUsername = this.queryUsername
        var __queryEmail = this.queryEmail
        var __queryPhonenum = this.queryPhonenum
        var __querySecurityQuestions = this.querySecurityQuestions
        var __queryAddresses = this.queryAddresses
        var _done__ = false
        while (!_done__) {
          val _tag__ = __input.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __token = __input.readString()
            case 16 =>
              __queryUserId = __input.readBool()
            case 24 =>
              __queryUsername = __input.readBool()
            case 32 =>
              __queryEmail = __input.readBool()
            case 40 =>
              __queryPhonenum = __input.readBool()
            case 48 =>
              __querySecurityQuestions = __input.readBool()
            case 56 =>
              __queryAddresses = __input.readBool()
            case tag => __input.skipField(tag)
          }
        }
        com.echo.protocol.Request.QueryUserInfoRequest(
            token = __token,
            queryUserId = __queryUserId,
            queryUsername = __queryUsername,
            queryEmail = __queryEmail,
            queryPhonenum = __queryPhonenum,
            querySecurityQuestions = __querySecurityQuestions,
            queryAddresses = __queryAddresses
        )
      }
      def withToken(__v: String): QueryUserInfoRequest = copy(token = __v)
      def withQueryUserId(__v: Boolean): QueryUserInfoRequest = copy(queryUserId = __v)
      def withQueryUsername(__v: Boolean): QueryUserInfoRequest = copy(queryUsername = __v)
      def withQueryEmail(__v: Boolean): QueryUserInfoRequest = copy(queryEmail = __v)
      def withQueryPhonenum(__v: Boolean): QueryUserInfoRequest = copy(queryPhonenum = __v)
      def withQuerySecurityQuestions(__v: Boolean): QueryUserInfoRequest = copy(querySecurityQuestions = __v)
      def withQueryAddresses(__v: Boolean): QueryUserInfoRequest = copy(queryAddresses = __v)
      def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
        __field.getNumber match {
          case 1 => {
            val __t = token
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = queryUserId
            if (__t != false) __t else null
          }
          case 3 => {
            val __t = queryUsername
            if (__t != false) __t else null
          }
          case 4 => {
            val __t = queryEmail
            if (__t != false) __t else null
          }
          case 5 => {
            val __t = queryPhonenum
            if (__t != false) __t else null
          }
          case 6 => {
            val __t = querySecurityQuestions
            if (__t != false) __t else null
          }
          case 7 => {
            val __t = queryAddresses
            if (__t != false) __t else null
          }
        }
      }
      override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.echo.protocol.Request.QueryUserInfoRequest
  }
  
  object QueryUserInfoRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[QueryUserInfoRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[QueryUserInfoRequest] = this
    def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request.QueryUserInfoRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
      val __fields = descriptor.getFields
      com.echo.protocol.Request.QueryUserInfoRequest(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(1), false).asInstanceOf[Boolean],
        __fieldsMap.getOrElse(__fields.get(2), false).asInstanceOf[Boolean],
        __fieldsMap.getOrElse(__fields.get(3), false).asInstanceOf[Boolean],
        __fieldsMap.getOrElse(__fields.get(4), false).asInstanceOf[Boolean],
        __fieldsMap.getOrElse(__fields.get(5), false).asInstanceOf[Boolean],
        __fieldsMap.getOrElse(__fields.get(6), false).asInstanceOf[Boolean]
      )
    }
    def descriptor: com.google.protobuf.Descriptors.Descriptor = com.echo.protocol.Request.descriptor.getNestedTypes.get(4)
    def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
    def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
    lazy val defaultInstance = com.echo.protocol.Request.QueryUserInfoRequest(
    )
    implicit class QueryUserInfoRequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, QueryUserInfoRequest]) extends com.trueaccord.lenses.ObjectLens[UpperPB, QueryUserInfoRequest](_l) {
      def token: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.token)((c_, f_) => c_.copy(token = f_))
      def queryUserId: com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.queryUserId)((c_, f_) => c_.copy(queryUserId = f_))
      def queryUsername: com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.queryUsername)((c_, f_) => c_.copy(queryUsername = f_))
      def queryEmail: com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.queryEmail)((c_, f_) => c_.copy(queryEmail = f_))
      def queryPhonenum: com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.queryPhonenum)((c_, f_) => c_.copy(queryPhonenum = f_))
      def querySecurityQuestions: com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.querySecurityQuestions)((c_, f_) => c_.copy(querySecurityQuestions = f_))
      def queryAddresses: com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.queryAddresses)((c_, f_) => c_.copy(queryAddresses = f_))
    }
    final val TOKEN_FIELD_NUMBER = 1
    final val QUERY_USER_ID_FIELD_NUMBER = 2
    final val QUERY_USERNAME_FIELD_NUMBER = 3
    final val QUERY_EMAIL_FIELD_NUMBER = 4
    final val QUERY_PHONENUM_FIELD_NUMBER = 5
    final val QUERY_SECURITY_QUESTIONS_FIELD_NUMBER = 6
    final val QUERY_ADDRESSES_FIELD_NUMBER = 7
  }
  
  @SerialVersionUID(0L)
  final case class UpdateUserInfoRequest(
      token: String = "",
      data: Seq[com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData] = Nil
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[UpdateUserInfoRequest] with com.trueaccord.lenses.Updatable[UpdateUserInfoRequest] {
      @transient
      lazy val serializedSize: Int = {
        var __size = 0
        if (token != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, token) }
        data.foreach(data => __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(data.serializedSize) + data.serializedSize)
        __size
      }
      def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
        {
          val __v = token
          if (__v != "") {
            output.writeString(1, __v)
          }
        };
        data.foreach { __v => 
          output.writeTag(2, 2)
          output.writeRawVarint32(__v.serializedSize)
          __v.writeTo(output)
        };
      }
      def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request.UpdateUserInfoRequest = {
        var __token = this.token
        val __data = (scala.collection.immutable.Vector.newBuilder[com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData] ++= this.data)
        var _done__ = false
        while (!_done__) {
          val _tag__ = __input.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __token = __input.readString()
            case 18 =>
              __data += com.trueaccord.scalapb.LiteParser.readMessage(__input, com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.defaultInstance)
            case tag => __input.skipField(tag)
          }
        }
        com.echo.protocol.Request.UpdateUserInfoRequest(
            token = __token,
            data = __data.result()
        )
      }
      def withToken(__v: String): UpdateUserInfoRequest = copy(token = __v)
      def clearData = copy(data = Seq.empty)
      def addData(__vs: com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData*): UpdateUserInfoRequest = addAllData(__vs)
      def addAllData(__vs: TraversableOnce[com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData]): UpdateUserInfoRequest = copy(data = data ++ __vs)
      def withData(__v: Seq[com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData]): UpdateUserInfoRequest = copy(data = __v)
      def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
        __field.getNumber match {
          case 1 => {
            val __t = token
            if (__t != "") __t else null
          }
          case 2 => data
        }
      }
      override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.echo.protocol.Request.UpdateUserInfoRequest
  }
  
  object UpdateUserInfoRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[UpdateUserInfoRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[UpdateUserInfoRequest] = this
    def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request.UpdateUserInfoRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
      val __fields = descriptor.getFields
      com.echo.protocol.Request.UpdateUserInfoRequest(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(1), Nil).asInstanceOf[Seq[com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData]]
      )
    }
    def descriptor: com.google.protobuf.Descriptors.Descriptor = com.echo.protocol.Request.descriptor.getNestedTypes.get(5)
    def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
      require(__field.getContainingType() == descriptor, "FieldDescriptor does not match message type.")
      var __out: com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
      __field.getNumber match {
        case 2 => __out = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData
      }
    __out
    }
    def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
    lazy val defaultInstance = com.echo.protocol.Request.UpdateUserInfoRequest(
    )
    @SerialVersionUID(0L)
    final case class UpdateData(
        value: com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Empty
        ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[UpdateData] with com.trueaccord.lenses.Updatable[UpdateData] {
        @transient
        lazy val serializedSize: Int = {
          var __size = 0
          if (value.username.isDefined) { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, value.username.get) }
          if (value.password.isDefined) { __size += com.google.protobuf.CodedOutputStream.computeStringSize(2, value.password.get) }
          if (value.email.isDefined) { __size += com.google.protobuf.CodedOutputStream.computeStringSize(3, value.email.get) }
          if (value.phonenum.isDefined) { __size += com.google.protobuf.CodedOutputStream.computeStringSize(4, value.phonenum.get) }
          if (value.securityQuestion1.isDefined) { __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(value.securityQuestion1.get.serializedSize) + value.securityQuestion1.get.serializedSize }
          if (value.securityQuestion2.isDefined) { __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(value.securityQuestion2.get.serializedSize) + value.securityQuestion2.get.serializedSize }
          if (value.securityQuestion3.isDefined) { __size += 1 + com.google.protobuf.CodedOutputStream.computeRawVarint32Size(value.securityQuestion3.get.serializedSize) + value.securityQuestion3.get.serializedSize }
          __size
        }
        def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
          value.username.foreach { __v => 
            output.writeString(1, __v)
          };
          value.password.foreach { __v => 
            output.writeString(2, __v)
          };
          value.email.foreach { __v => 
            output.writeString(3, __v)
          };
          value.phonenum.foreach { __v => 
            output.writeString(4, __v)
          };
          value.securityQuestion1.foreach { __v => 
            output.writeTag(5, 2)
            output.writeRawVarint32(__v.serializedSize)
            __v.writeTo(output)
          };
          value.securityQuestion2.foreach { __v => 
            output.writeTag(6, 2)
            output.writeRawVarint32(__v.serializedSize)
            __v.writeTo(output)
          };
          value.securityQuestion3.foreach { __v => 
            output.writeTag(7, 2)
            output.writeRawVarint32(__v.serializedSize)
            __v.writeTo(output)
          };
        }
        def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData = {
          var __value = this.value
          var _done__ = false
          while (!_done__) {
            val _tag__ = __input.readTag()
            _tag__ match {
              case 0 => _done__ = true
              case 10 =>
                __value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Username(__input.readString())
              case 18 =>
                __value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Password(__input.readString())
              case 26 =>
                __value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Email(__input.readString())
              case 34 =>
                __value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Phonenum(__input.readString())
              case 42 =>
                __value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.SecurityQuestion1(com.trueaccord.scalapb.LiteParser.readMessage(__input, value.securityQuestion1.getOrElse(com.echo.protocol.SecurityQuestionPair.defaultInstance)))
              case 50 =>
                __value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.SecurityQuestion2(com.trueaccord.scalapb.LiteParser.readMessage(__input, value.securityQuestion2.getOrElse(com.echo.protocol.SecurityQuestionPair.defaultInstance)))
              case 58 =>
                __value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.SecurityQuestion3(com.trueaccord.scalapb.LiteParser.readMessage(__input, value.securityQuestion3.getOrElse(com.echo.protocol.SecurityQuestionPair.defaultInstance)))
              case tag => __input.skipField(tag)
            }
          }
          com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData(
              value = __value
          )
        }
        def getUsername: String = value.username.getOrElse("")
        def withUsername(__v: String): UpdateData = copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Username(__v))
        def getPassword: String = value.password.getOrElse("")
        def withPassword(__v: String): UpdateData = copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Password(__v))
        def getEmail: String = value.email.getOrElse("")
        def withEmail(__v: String): UpdateData = copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Email(__v))
        def getPhonenum: String = value.phonenum.getOrElse("")
        def withPhonenum(__v: String): UpdateData = copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Phonenum(__v))
        def getSecurityQuestion1: com.echo.protocol.SecurityQuestionPair = value.securityQuestion1.getOrElse(com.echo.protocol.SecurityQuestionPair.defaultInstance)
        def withSecurityQuestion1(__v: com.echo.protocol.SecurityQuestionPair): UpdateData = copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.SecurityQuestion1(__v))
        def getSecurityQuestion2: com.echo.protocol.SecurityQuestionPair = value.securityQuestion2.getOrElse(com.echo.protocol.SecurityQuestionPair.defaultInstance)
        def withSecurityQuestion2(__v: com.echo.protocol.SecurityQuestionPair): UpdateData = copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.SecurityQuestion2(__v))
        def getSecurityQuestion3: com.echo.protocol.SecurityQuestionPair = value.securityQuestion3.getOrElse(com.echo.protocol.SecurityQuestionPair.defaultInstance)
        def withSecurityQuestion3(__v: com.echo.protocol.SecurityQuestionPair): UpdateData = copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.SecurityQuestion3(__v))
        def clearValue: UpdateData = copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Empty)
        def withValue(__v: com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value): UpdateData = copy(value = __v)
        def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
          __field.getNumber match {
            case 1 => value.username.getOrElse(null)
            case 2 => value.password.getOrElse(null)
            case 3 => value.email.getOrElse(null)
            case 4 => value.phonenum.getOrElse(null)
            case 5 => value.securityQuestion1.getOrElse(null)
            case 6 => value.securityQuestion2.getOrElse(null)
            case 7 => value.securityQuestion3.getOrElse(null)
          }
        }
        override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
        def companion = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData
    }
    
    object UpdateData extends com.trueaccord.scalapb.GeneratedMessageCompanion[UpdateData] {
      implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[UpdateData] = this
      def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData = {
        require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
        val __fields = descriptor.getFields
        com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData(
          value = __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[String]].map(com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Username(_)) orElse
__fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[String]].map(com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Password(_)) orElse
__fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[String]].map(com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Email(_)) orElse
__fieldsMap.get(__fields.get(3)).asInstanceOf[scala.Option[String]].map(com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Phonenum(_)) orElse
__fieldsMap.get(__fields.get(4)).asInstanceOf[scala.Option[com.echo.protocol.SecurityQuestionPair]].map(com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.SecurityQuestion1(_)) orElse
__fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[com.echo.protocol.SecurityQuestionPair]].map(com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.SecurityQuestion2(_)) orElse
__fieldsMap.get(__fields.get(6)).asInstanceOf[scala.Option[com.echo.protocol.SecurityQuestionPair]].map(com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.SecurityQuestion3(_)) getOrElse com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Empty
        )
      }
      def descriptor: com.google.protobuf.Descriptors.Descriptor = com.echo.protocol.Request.UpdateUserInfoRequest.descriptor.getNestedTypes.get(0)
      def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
        require(__field.getContainingType() == descriptor, "FieldDescriptor does not match message type.")
        var __out: com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
        __field.getNumber match {
          case 5 => __out = com.echo.protocol.SecurityQuestionPair
          case 6 => __out = com.echo.protocol.SecurityQuestionPair
          case 7 => __out = com.echo.protocol.SecurityQuestionPair
        }
      __out
      }
      def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
      lazy val defaultInstance = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData(
      )
      sealed trait Value extends com.trueaccord.scalapb.GeneratedOneof {
        def isEmpty: Boolean = false
        def isDefined: Boolean = true
        def number: Int
        def isUsername: Boolean = false
        def isPassword: Boolean = false
        def isEmail: Boolean = false
        def isPhonenum: Boolean = false
        def isSecurityQuestion1: Boolean = false
        def isSecurityQuestion2: Boolean = false
        def isSecurityQuestion3: Boolean = false
        def username: scala.Option[String] = None
        def password: scala.Option[String] = None
        def email: scala.Option[String] = None
        def phonenum: scala.Option[String] = None
        def securityQuestion1: scala.Option[com.echo.protocol.SecurityQuestionPair] = None
        def securityQuestion2: scala.Option[com.echo.protocol.SecurityQuestionPair] = None
        def securityQuestion3: scala.Option[com.echo.protocol.SecurityQuestionPair] = None
      }
      object Value extends {
        @SerialVersionUID(0L)
        case object Empty extends Value {
          override def isEmpty: Boolean = true
          override def isDefined: Boolean = false
          override def number: Int = 0
        }
      
        @SerialVersionUID(0L)
        case class Username(value: String) extends Value {
          override def isUsername: Boolean = true
          override def username: scala.Option[String] = Some(value)
          override def number: Int = 1
        }
        @SerialVersionUID(0L)
        case class Password(value: String) extends Value {
          override def isPassword: Boolean = true
          override def password: scala.Option[String] = Some(value)
          override def number: Int = 2
        }
        @SerialVersionUID(0L)
        case class Email(value: String) extends Value {
          override def isEmail: Boolean = true
          override def email: scala.Option[String] = Some(value)
          override def number: Int = 3
        }
        @SerialVersionUID(0L)
        case class Phonenum(value: String) extends Value {
          override def isPhonenum: Boolean = true
          override def phonenum: scala.Option[String] = Some(value)
          override def number: Int = 4
        }
        @SerialVersionUID(0L)
        case class SecurityQuestion1(value: com.echo.protocol.SecurityQuestionPair) extends Value {
          override def isSecurityQuestion1: Boolean = true
          override def securityQuestion1: scala.Option[com.echo.protocol.SecurityQuestionPair] = Some(value)
          override def number: Int = 5
        }
        @SerialVersionUID(0L)
        case class SecurityQuestion2(value: com.echo.protocol.SecurityQuestionPair) extends Value {
          override def isSecurityQuestion2: Boolean = true
          override def securityQuestion2: scala.Option[com.echo.protocol.SecurityQuestionPair] = Some(value)
          override def number: Int = 6
        }
        @SerialVersionUID(0L)
        case class SecurityQuestion3(value: com.echo.protocol.SecurityQuestionPair) extends Value {
          override def isSecurityQuestion3: Boolean = true
          override def securityQuestion3: scala.Option[com.echo.protocol.SecurityQuestionPair] = Some(value)
          override def number: Int = 7
        }
      }
      implicit class UpdateDataLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, UpdateData]) extends com.trueaccord.lenses.ObjectLens[UpperPB, UpdateData](_l) {
        def username: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getUsername)((c_, f_) => c_.copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Username(f_)))
        def password: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getPassword)((c_, f_) => c_.copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Password(f_)))
        def email: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getEmail)((c_, f_) => c_.copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Email(f_)))
        def phonenum: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.getPhonenum)((c_, f_) => c_.copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.Phonenum(f_)))
        def securityQuestion1: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.SecurityQuestionPair] = field(_.getSecurityQuestion1)((c_, f_) => c_.copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.SecurityQuestion1(f_)))
        def securityQuestion2: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.SecurityQuestionPair] = field(_.getSecurityQuestion2)((c_, f_) => c_.copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.SecurityQuestion2(f_)))
        def securityQuestion3: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.SecurityQuestionPair] = field(_.getSecurityQuestion3)((c_, f_) => c_.copy(value = com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value.SecurityQuestion3(f_)))
        def value: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData.Value] = field(_.value)((c_, f_) => c_.copy(value = f_))
      }
      final val USERNAME_FIELD_NUMBER = 1
      final val PASSWORD_FIELD_NUMBER = 2
      final val EMAIL_FIELD_NUMBER = 3
      final val PHONENUM_FIELD_NUMBER = 4
      final val SECURITY_QUESTION1_FIELD_NUMBER = 5
      final val SECURITY_QUESTION2_FIELD_NUMBER = 6
      final val SECURITY_QUESTION3_FIELD_NUMBER = 7
    }
    
    implicit class UpdateUserInfoRequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, UpdateUserInfoRequest]) extends com.trueaccord.lenses.ObjectLens[UpperPB, UpdateUserInfoRequest](_l) {
      def token: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.token)((c_, f_) => c_.copy(token = f_))
      def data: com.trueaccord.lenses.Lens[UpperPB, Seq[com.echo.protocol.Request.UpdateUserInfoRequest.UpdateData]] = field(_.data)((c_, f_) => c_.copy(data = f_))
    }
    final val TOKEN_FIELD_NUMBER = 1
    final val DATA_FIELD_NUMBER = 2
  }
  
  @SerialVersionUID(0L)
  final case class AddUserAddressRequest(
      token: String = "",
      recipientsName: String = "",
      recipientsPhone: String = "",
      recipientsAddress: String = "",
      recipientsPostcode: String = ""
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[AddUserAddressRequest] with com.trueaccord.lenses.Updatable[AddUserAddressRequest] {
      @transient
      lazy val serializedSize: Int = {
        var __size = 0
        if (token != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, token) }
        if (recipientsName != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(3, recipientsName) }
        if (recipientsPhone != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(4, recipientsPhone) }
        if (recipientsAddress != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(5, recipientsAddress) }
        if (recipientsPostcode != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(6, recipientsPostcode) }
        __size
      }
      def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
        {
          val __v = token
          if (__v != "") {
            output.writeString(1, __v)
          }
        };
        {
          val __v = recipientsName
          if (__v != "") {
            output.writeString(3, __v)
          }
        };
        {
          val __v = recipientsPhone
          if (__v != "") {
            output.writeString(4, __v)
          }
        };
        {
          val __v = recipientsAddress
          if (__v != "") {
            output.writeString(5, __v)
          }
        };
        {
          val __v = recipientsPostcode
          if (__v != "") {
            output.writeString(6, __v)
          }
        };
      }
      def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request.AddUserAddressRequest = {
        var __token = this.token
        var __recipientsName = this.recipientsName
        var __recipientsPhone = this.recipientsPhone
        var __recipientsAddress = this.recipientsAddress
        var __recipientsPostcode = this.recipientsPostcode
        var _done__ = false
        while (!_done__) {
          val _tag__ = __input.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __token = __input.readString()
            case 26 =>
              __recipientsName = __input.readString()
            case 34 =>
              __recipientsPhone = __input.readString()
            case 42 =>
              __recipientsAddress = __input.readString()
            case 50 =>
              __recipientsPostcode = __input.readString()
            case tag => __input.skipField(tag)
          }
        }
        com.echo.protocol.Request.AddUserAddressRequest(
            token = __token,
            recipientsName = __recipientsName,
            recipientsPhone = __recipientsPhone,
            recipientsAddress = __recipientsAddress,
            recipientsPostcode = __recipientsPostcode
        )
      }
      def withToken(__v: String): AddUserAddressRequest = copy(token = __v)
      def withRecipientsName(__v: String): AddUserAddressRequest = copy(recipientsName = __v)
      def withRecipientsPhone(__v: String): AddUserAddressRequest = copy(recipientsPhone = __v)
      def withRecipientsAddress(__v: String): AddUserAddressRequest = copy(recipientsAddress = __v)
      def withRecipientsPostcode(__v: String): AddUserAddressRequest = copy(recipientsPostcode = __v)
      def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
        __field.getNumber match {
          case 1 => {
            val __t = token
            if (__t != "") __t else null
          }
          case 3 => {
            val __t = recipientsName
            if (__t != "") __t else null
          }
          case 4 => {
            val __t = recipientsPhone
            if (__t != "") __t else null
          }
          case 5 => {
            val __t = recipientsAddress
            if (__t != "") __t else null
          }
          case 6 => {
            val __t = recipientsPostcode
            if (__t != "") __t else null
          }
        }
      }
      override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.echo.protocol.Request.AddUserAddressRequest
  }
  
  object AddUserAddressRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[AddUserAddressRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[AddUserAddressRequest] = this
    def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request.AddUserAddressRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
      val __fields = descriptor.getFields
      com.echo.protocol.Request.AddUserAddressRequest(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(3), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(4), "").asInstanceOf[String]
      )
    }
    def descriptor: com.google.protobuf.Descriptors.Descriptor = com.echo.protocol.Request.descriptor.getNestedTypes.get(6)
    def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
    def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
    lazy val defaultInstance = com.echo.protocol.Request.AddUserAddressRequest(
    )
    implicit class AddUserAddressRequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, AddUserAddressRequest]) extends com.trueaccord.lenses.ObjectLens[UpperPB, AddUserAddressRequest](_l) {
      def token: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.token)((c_, f_) => c_.copy(token = f_))
      def recipientsName: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.recipientsName)((c_, f_) => c_.copy(recipientsName = f_))
      def recipientsPhone: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.recipientsPhone)((c_, f_) => c_.copy(recipientsPhone = f_))
      def recipientsAddress: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.recipientsAddress)((c_, f_) => c_.copy(recipientsAddress = f_))
      def recipientsPostcode: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.recipientsPostcode)((c_, f_) => c_.copy(recipientsPostcode = f_))
    }
    final val TOKEN_FIELD_NUMBER = 1
    final val RECIPIENTS_NAME_FIELD_NUMBER = 3
    final val RECIPIENTS_PHONE_FIELD_NUMBER = 4
    final val RECIPIENTS_ADDRESS_FIELD_NUMBER = 5
    final val RECIPIENTS_POSTCODE_FIELD_NUMBER = 6
  }
  
  @SerialVersionUID(0L)
  final case class UpdateUserAddressRequest(
      token: String = "",
      id: String = "",
      recipientsName: String = "",
      recipientsPhone: String = "",
      recipientsAddress: String = "",
      recipientsPostcode: String = ""
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[UpdateUserAddressRequest] with com.trueaccord.lenses.Updatable[UpdateUserAddressRequest] {
      @transient
      lazy val serializedSize: Int = {
        var __size = 0
        if (token != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, token) }
        if (id != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(2, id) }
        if (recipientsName != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(3, recipientsName) }
        if (recipientsPhone != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(4, recipientsPhone) }
        if (recipientsAddress != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(5, recipientsAddress) }
        if (recipientsPostcode != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(6, recipientsPostcode) }
        __size
      }
      def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
        {
          val __v = token
          if (__v != "") {
            output.writeString(1, __v)
          }
        };
        {
          val __v = id
          if (__v != "") {
            output.writeString(2, __v)
          }
        };
        {
          val __v = recipientsName
          if (__v != "") {
            output.writeString(3, __v)
          }
        };
        {
          val __v = recipientsPhone
          if (__v != "") {
            output.writeString(4, __v)
          }
        };
        {
          val __v = recipientsAddress
          if (__v != "") {
            output.writeString(5, __v)
          }
        };
        {
          val __v = recipientsPostcode
          if (__v != "") {
            output.writeString(6, __v)
          }
        };
      }
      def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request.UpdateUserAddressRequest = {
        var __token = this.token
        var __id = this.id
        var __recipientsName = this.recipientsName
        var __recipientsPhone = this.recipientsPhone
        var __recipientsAddress = this.recipientsAddress
        var __recipientsPostcode = this.recipientsPostcode
        var _done__ = false
        while (!_done__) {
          val _tag__ = __input.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __token = __input.readString()
            case 18 =>
              __id = __input.readString()
            case 26 =>
              __recipientsName = __input.readString()
            case 34 =>
              __recipientsPhone = __input.readString()
            case 42 =>
              __recipientsAddress = __input.readString()
            case 50 =>
              __recipientsPostcode = __input.readString()
            case tag => __input.skipField(tag)
          }
        }
        com.echo.protocol.Request.UpdateUserAddressRequest(
            token = __token,
            id = __id,
            recipientsName = __recipientsName,
            recipientsPhone = __recipientsPhone,
            recipientsAddress = __recipientsAddress,
            recipientsPostcode = __recipientsPostcode
        )
      }
      def withToken(__v: String): UpdateUserAddressRequest = copy(token = __v)
      def withId(__v: String): UpdateUserAddressRequest = copy(id = __v)
      def withRecipientsName(__v: String): UpdateUserAddressRequest = copy(recipientsName = __v)
      def withRecipientsPhone(__v: String): UpdateUserAddressRequest = copy(recipientsPhone = __v)
      def withRecipientsAddress(__v: String): UpdateUserAddressRequest = copy(recipientsAddress = __v)
      def withRecipientsPostcode(__v: String): UpdateUserAddressRequest = copy(recipientsPostcode = __v)
      def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
        __field.getNumber match {
          case 1 => {
            val __t = token
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = id
            if (__t != "") __t else null
          }
          case 3 => {
            val __t = recipientsName
            if (__t != "") __t else null
          }
          case 4 => {
            val __t = recipientsPhone
            if (__t != "") __t else null
          }
          case 5 => {
            val __t = recipientsAddress
            if (__t != "") __t else null
          }
          case 6 => {
            val __t = recipientsPostcode
            if (__t != "") __t else null
          }
        }
      }
      override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.echo.protocol.Request.UpdateUserAddressRequest
  }
  
  object UpdateUserAddressRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[UpdateUserAddressRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[UpdateUserAddressRequest] = this
    def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request.UpdateUserAddressRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
      val __fields = descriptor.getFields
      com.echo.protocol.Request.UpdateUserAddressRequest(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(2), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(3), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(4), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(5), "").asInstanceOf[String]
      )
    }
    def descriptor: com.google.protobuf.Descriptors.Descriptor = com.echo.protocol.Request.descriptor.getNestedTypes.get(7)
    def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
    def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
    lazy val defaultInstance = com.echo.protocol.Request.UpdateUserAddressRequest(
    )
    implicit class UpdateUserAddressRequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, UpdateUserAddressRequest]) extends com.trueaccord.lenses.ObjectLens[UpperPB, UpdateUserAddressRequest](_l) {
      def token: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.token)((c_, f_) => c_.copy(token = f_))
      def id: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.id)((c_, f_) => c_.copy(id = f_))
      def recipientsName: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.recipientsName)((c_, f_) => c_.copy(recipientsName = f_))
      def recipientsPhone: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.recipientsPhone)((c_, f_) => c_.copy(recipientsPhone = f_))
      def recipientsAddress: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.recipientsAddress)((c_, f_) => c_.copy(recipientsAddress = f_))
      def recipientsPostcode: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.recipientsPostcode)((c_, f_) => c_.copy(recipientsPostcode = f_))
    }
    final val TOKEN_FIELD_NUMBER = 1
    final val ID_FIELD_NUMBER = 2
    final val RECIPIENTS_NAME_FIELD_NUMBER = 3
    final val RECIPIENTS_PHONE_FIELD_NUMBER = 4
    final val RECIPIENTS_ADDRESS_FIELD_NUMBER = 5
    final val RECIPIENTS_POSTCODE_FIELD_NUMBER = 6
  }
  
  @SerialVersionUID(0L)
  final case class DeleteUserAddressRequest(
      token: String = "",
      id: String = ""
      ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[DeleteUserAddressRequest] with com.trueaccord.lenses.Updatable[DeleteUserAddressRequest] {
      @transient
      lazy val serializedSize: Int = {
        var __size = 0
        if (token != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, token) }
        if (id != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(2, id) }
        __size
      }
      def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
        {
          val __v = token
          if (__v != "") {
            output.writeString(1, __v)
          }
        };
        {
          val __v = id
          if (__v != "") {
            output.writeString(2, __v)
          }
        };
      }
      def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.echo.protocol.Request.DeleteUserAddressRequest = {
        var __token = this.token
        var __id = this.id
        var _done__ = false
        while (!_done__) {
          val _tag__ = __input.readTag()
          _tag__ match {
            case 0 => _done__ = true
            case 10 =>
              __token = __input.readString()
            case 18 =>
              __id = __input.readString()
            case tag => __input.skipField(tag)
          }
        }
        com.echo.protocol.Request.DeleteUserAddressRequest(
            token = __token,
            id = __id
        )
      }
      def withToken(__v: String): DeleteUserAddressRequest = copy(token = __v)
      def withId(__v: String): DeleteUserAddressRequest = copy(id = __v)
      def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
        __field.getNumber match {
          case 1 => {
            val __t = token
            if (__t != "") __t else null
          }
          case 2 => {
            val __t = id
            if (__t != "") __t else null
          }
        }
      }
      override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
      def companion = com.echo.protocol.Request.DeleteUserAddressRequest
  }
  
  object DeleteUserAddressRequest extends com.trueaccord.scalapb.GeneratedMessageCompanion[DeleteUserAddressRequest] {
    implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[DeleteUserAddressRequest] = this
    def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.echo.protocol.Request.DeleteUserAddressRequest = {
      require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
      val __fields = descriptor.getFields
      com.echo.protocol.Request.DeleteUserAddressRequest(
        __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
        __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String]
      )
    }
    def descriptor: com.google.protobuf.Descriptors.Descriptor = com.echo.protocol.Request.descriptor.getNestedTypes.get(8)
    def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
    def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
    lazy val defaultInstance = com.echo.protocol.Request.DeleteUserAddressRequest(
    )
    implicit class DeleteUserAddressRequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, DeleteUserAddressRequest]) extends com.trueaccord.lenses.ObjectLens[UpperPB, DeleteUserAddressRequest](_l) {
      def token: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.token)((c_, f_) => c_.copy(token = f_))
      def id: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.id)((c_, f_) => c_.copy(id = f_))
    }
    final val TOKEN_FIELD_NUMBER = 1
    final val ID_FIELD_NUMBER = 2
  }
  
  implicit class RequestLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, Request]) extends com.trueaccord.lenses.ObjectLens[UpperPB, Request](_l) {
    def signupRequest: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.SignupRequest] = field(_.getSignupRequest)((c_, f_) => c_.copy(content = com.echo.protocol.Request.Content.SignupRequest(f_)))
    def loginRequest: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.LoginRequest] = field(_.getLoginRequest)((c_, f_) => c_.copy(content = com.echo.protocol.Request.Content.LoginRequest(f_)))
    def authenticationRequest: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.AuthenticationRequest] = field(_.getAuthenticationRequest)((c_, f_) => c_.copy(content = com.echo.protocol.Request.Content.AuthenticationRequest(f_)))
    def logoutRequest: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.LogoutRequest] = field(_.getLogoutRequest)((c_, f_) => c_.copy(content = com.echo.protocol.Request.Content.LogoutRequest(f_)))
    def queryUserInfoRequest: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.QueryUserInfoRequest] = field(_.getQueryUserInfoRequest)((c_, f_) => c_.copy(content = com.echo.protocol.Request.Content.QueryUserInfoRequest(f_)))
    def updateUserInfoRequest: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.UpdateUserInfoRequest] = field(_.getUpdateUserInfoRequest)((c_, f_) => c_.copy(content = com.echo.protocol.Request.Content.UpdateUserInfoRequest(f_)))
    def addUserAddressRequest: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.AddUserAddressRequest] = field(_.getAddUserAddressRequest)((c_, f_) => c_.copy(content = com.echo.protocol.Request.Content.AddUserAddressRequest(f_)))
    def updateUserAddressRequest: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.UpdateUserAddressRequest] = field(_.getUpdateUserAddressRequest)((c_, f_) => c_.copy(content = com.echo.protocol.Request.Content.UpdateUserAddressRequest(f_)))
    def deleteUserAddressRequest: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.DeleteUserAddressRequest] = field(_.getDeleteUserAddressRequest)((c_, f_) => c_.copy(content = com.echo.protocol.Request.Content.DeleteUserAddressRequest(f_)))
    def content: com.trueaccord.lenses.Lens[UpperPB, com.echo.protocol.Request.Content] = field(_.content)((c_, f_) => c_.copy(content = f_))
  }
  final val SIGNUP_REQUEST_FIELD_NUMBER = 1001
  final val LOGIN_REQUEST_FIELD_NUMBER = 1002
  final val AUTHENTICATION_REQUEST_FIELD_NUMBER = 1003
  final val LOGOUT_REQUEST_FIELD_NUMBER = 1004
  final val QUERY_USER_INFO_REQUEST_FIELD_NUMBER = 1005
  final val UPDATE_USER_INFO_REQUEST_FIELD_NUMBER = 1006
  final val ADD_USER_ADDRESS_REQUEST_FIELD_NUMBER = 1100
  final val UPDATE_USER_ADDRESS_REQUEST_FIELD_NUMBER = 1101
  final val DELETE_USER_ADDRESS_REQUEST_FIELD_NUMBER = 1102
}
