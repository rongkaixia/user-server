// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.echo.protocol



sealed trait ResultCode extends com.trueaccord.scalapb.GeneratedEnum {
  type EnumType = ResultCode
  def isSuccess: Boolean = false
  def isInternalServerError: Boolean = false
  def isRequestResourceNotFound: Boolean = false
  def isMethodNotAllow: Boolean = false
  def isMessageTypeError: Boolean = false
  def isInvalidMessage: Boolean = false
  def isInvalidPhonenum: Boolean = false
  def isInvalidEmail: Boolean = false
  def isPhonenumAlreadyExisted: Boolean = false
  def isEmailAlreadyExisted: Boolean = false
  def isInvalidPassword: Boolean = false
  def isInvalidSessionToken: Boolean = false
  def isSessionTokenExpired: Boolean = false
  def isInvalidFromToken: Boolean = false
  def isExpiredFromToken: Boolean = false
  def isIllegalArgument: Boolean = false
  def isUnrecognized: Boolean = false
  def companion: com.trueaccord.scalapb.GeneratedEnumCompanion[ResultCode] = ResultCode
}

object ResultCode extends com.trueaccord.scalapb.GeneratedEnumCompanion[ResultCode] {
  implicit def enumCompanion: com.trueaccord.scalapb.GeneratedEnumCompanion[ResultCode] = this
  @SerialVersionUID(0L)
  case object SUCCESS extends ResultCode {
    val value = 0
    val index = 0
    val name = "SUCCESS"
    override def isSuccess: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object INTERNAL_SERVER_ERROR extends ResultCode {
    val value = 10000
    val index = 1
    val name = "INTERNAL_SERVER_ERROR"
    override def isInternalServerError: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object REQUEST_RESOURCE_NOT_FOUND extends ResultCode {
    val value = 10001
    val index = 2
    val name = "REQUEST_RESOURCE_NOT_FOUND"
    override def isRequestResourceNotFound: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object METHOD_NOT_ALLOW extends ResultCode {
    val value = 10002
    val index = 3
    val name = "METHOD_NOT_ALLOW"
    override def isMethodNotAllow: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object MESSAGE_TYPE_ERROR extends ResultCode {
    val value = 10003
    val index = 4
    val name = "MESSAGE_TYPE_ERROR"
    override def isMessageTypeError: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object INVALID_MESSAGE extends ResultCode {
    val value = 10004
    val index = 5
    val name = "INVALID_MESSAGE"
    override def isInvalidMessage: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object INVALID_PHONENUM extends ResultCode {
    val value = 20001
    val index = 6
    val name = "INVALID_PHONENUM"
    override def isInvalidPhonenum: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object INVALID_EMAIL extends ResultCode {
    val value = 20002
    val index = 7
    val name = "INVALID_EMAIL"
    override def isInvalidEmail: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object PHONENUM_ALREADY_EXISTED extends ResultCode {
    val value = 20005
    val index = 8
    val name = "PHONENUM_ALREADY_EXISTED"
    override def isPhonenumAlreadyExisted: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object EMAIL_ALREADY_EXISTED extends ResultCode {
    val value = 20006
    val index = 9
    val name = "EMAIL_ALREADY_EXISTED"
    override def isEmailAlreadyExisted: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object INVALID_PASSWORD extends ResultCode {
    val value = 20011
    val index = 10
    val name = "INVALID_PASSWORD"
    override def isInvalidPassword: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object INVALID_SESSION_TOKEN extends ResultCode {
    val value = 30001
    val index = 11
    val name = "INVALID_SESSION_TOKEN"
    override def isInvalidSessionToken: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object SESSION_TOKEN_EXPIRED extends ResultCode {
    val value = 30002
    val index = 12
    val name = "SESSION_TOKEN_EXPIRED"
    override def isSessionTokenExpired: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object INVALID_FROM_TOKEN extends ResultCode {
    val value = 40001
    val index = 13
    val name = "INVALID_FROM_TOKEN"
    override def isInvalidFromToken: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object EXPIRED_FROM_TOKEN extends ResultCode {
    val value = 40002
    val index = 14
    val name = "EXPIRED_FROM_TOKEN"
    override def isExpiredFromToken: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object ILLEGAL_ARGUMENT extends ResultCode {
    val value = 50001
    val index = 15
    val name = "ILLEGAL_ARGUMENT"
    override def isIllegalArgument: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case class Unrecognized(value: Int) extends ResultCode {
    val name = "UNRECOGNIZED"
    val index = -1
    override def isUnrecognized: Boolean = true
  }
  
  lazy val values = Seq(SUCCESS, INTERNAL_SERVER_ERROR, REQUEST_RESOURCE_NOT_FOUND, METHOD_NOT_ALLOW, MESSAGE_TYPE_ERROR, INVALID_MESSAGE, INVALID_PHONENUM, INVALID_EMAIL, PHONENUM_ALREADY_EXISTED, EMAIL_ALREADY_EXISTED, INVALID_PASSWORD, INVALID_SESSION_TOKEN, SESSION_TOKEN_EXPIRED, INVALID_FROM_TOKEN, EXPIRED_FROM_TOKEN, ILLEGAL_ARGUMENT)
  def fromValue(value: Int): ResultCode = value match {
    case 0 => SUCCESS
    case 10000 => INTERNAL_SERVER_ERROR
    case 10001 => REQUEST_RESOURCE_NOT_FOUND
    case 10002 => METHOD_NOT_ALLOW
    case 10003 => MESSAGE_TYPE_ERROR
    case 10004 => INVALID_MESSAGE
    case 20001 => INVALID_PHONENUM
    case 20002 => INVALID_EMAIL
    case 20005 => PHONENUM_ALREADY_EXISTED
    case 20006 => EMAIL_ALREADY_EXISTED
    case 20011 => INVALID_PASSWORD
    case 30001 => INVALID_SESSION_TOKEN
    case 30002 => SESSION_TOKEN_EXPIRED
    case 40001 => INVALID_FROM_TOKEN
    case 40002 => EXPIRED_FROM_TOKEN
    case 50001 => ILLEGAL_ARGUMENT
    case __other => Unrecognized(__other)
  }
  def descriptor: com.google.protobuf.Descriptors.EnumDescriptor = ProtocolProtocolProto.descriptor.getEnumTypes.get(3)
}