// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.echo.protocol



sealed trait ResultCode extends com.trueaccord.scalapb.GeneratedEnum {
  type EnumType = ResultCode
  def isSuccess: Boolean = false
  def isInternalServerError: Boolean = false
  def isRequestResourceNotFound: Boolean = false
  def isMethodNotAllow: Boolean = false
  def isMessageTypeError: Boolean = false
  def isInvalidMessage: Boolean = false
  def isSignupInvalidPhonenum: Boolean = false
  def isSignupPhonenumAlreadyExisted: Boolean = false
  def isSignupInvalidPassword: Boolean = false
  def isLoginInvalidUser: Boolean = false
  def isLoginInvalidPassword: Boolean = false
  def isInvalidToken: Boolean = false
  def isUnrecognized: Boolean = false
  def companion: com.trueaccord.scalapb.GeneratedEnumCompanion[ResultCode] = ResultCode
}

object ResultCode extends com.trueaccord.scalapb.GeneratedEnumCompanion[ResultCode] {
  implicit def enumCompanion: com.trueaccord.scalapb.GeneratedEnumCompanion[ResultCode] = this
  @SerialVersionUID(0L)
  case object SUCCESS extends ResultCode {
    val value = 0
    val index = 0
    val name = "SUCCESS"
    override def isSuccess: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object INTERNAL_SERVER_ERROR extends ResultCode {
    val value = 10000
    val index = 1
    val name = "INTERNAL_SERVER_ERROR"
    override def isInternalServerError: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object REQUEST_RESOURCE_NOT_FOUND extends ResultCode {
    val value = 10001
    val index = 2
    val name = "REQUEST_RESOURCE_NOT_FOUND"
    override def isRequestResourceNotFound: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object METHOD_NOT_ALLOW extends ResultCode {
    val value = 10002
    val index = 3
    val name = "METHOD_NOT_ALLOW"
    override def isMethodNotAllow: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object MESSAGE_TYPE_ERROR extends ResultCode {
    val value = 10003
    val index = 4
    val name = "MESSAGE_TYPE_ERROR"
    override def isMessageTypeError: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object INVALID_MESSAGE extends ResultCode {
    val value = 10004
    val index = 5
    val name = "INVALID_MESSAGE"
    override def isInvalidMessage: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object SIGNUP_INVALID_PHONENUM extends ResultCode {
    val value = 20001
    val index = 6
    val name = "SIGNUP_INVALID_PHONENUM"
    override def isSignupInvalidPhonenum: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object SIGNUP_PHONENUM_ALREADY_EXISTED extends ResultCode {
    val value = 20002
    val index = 7
    val name = "SIGNUP_PHONENUM_ALREADY_EXISTED"
    override def isSignupPhonenumAlreadyExisted: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object SIGNUP_INVALID_PASSWORD extends ResultCode {
    val value = 20003
    val index = 8
    val name = "SIGNUP_INVALID_PASSWORD"
    override def isSignupInvalidPassword: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object LOGIN_INVALID_USER extends ResultCode {
    val value = 30001
    val index = 9
    val name = "LOGIN_INVALID_USER"
    override def isLoginInvalidUser: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object LOGIN_INVALID_PASSWORD extends ResultCode {
    val value = 30002
    val index = 10
    val name = "LOGIN_INVALID_PASSWORD"
    override def isLoginInvalidPassword: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case object INVALID_TOKEN extends ResultCode {
    val value = 40001
    val index = 11
    val name = "INVALID_TOKEN"
    override def isInvalidToken: Boolean = true
  }
  
  @SerialVersionUID(0L)
  case class Unrecognized(value: Int) extends ResultCode {
    val name = "UNRECOGNIZED"
    val index = -1
    override def isUnrecognized: Boolean = true
  }
  
  lazy val values = Seq(SUCCESS, INTERNAL_SERVER_ERROR, REQUEST_RESOURCE_NOT_FOUND, METHOD_NOT_ALLOW, MESSAGE_TYPE_ERROR, INVALID_MESSAGE, SIGNUP_INVALID_PHONENUM, SIGNUP_PHONENUM_ALREADY_EXISTED, SIGNUP_INVALID_PASSWORD, LOGIN_INVALID_USER, LOGIN_INVALID_PASSWORD, INVALID_TOKEN)
  def fromValue(value: Int): ResultCode = value match {
    case 0 => SUCCESS
    case 10000 => INTERNAL_SERVER_ERROR
    case 10001 => REQUEST_RESOURCE_NOT_FOUND
    case 10002 => METHOD_NOT_ALLOW
    case 10003 => MESSAGE_TYPE_ERROR
    case 10004 => INVALID_MESSAGE
    case 20001 => SIGNUP_INVALID_PHONENUM
    case 20002 => SIGNUP_PHONENUM_ALREADY_EXISTED
    case 20003 => SIGNUP_INVALID_PASSWORD
    case 30001 => LOGIN_INVALID_USER
    case 30002 => LOGIN_INVALID_PASSWORD
    case 40001 => INVALID_TOKEN
    case __other => Unrecognized(__other)
  }
  def descriptor: com.google.protobuf.Descriptors.EnumDescriptor = ProtocolComEchoProtocolProto.descriptor.getEnumTypes.get(3)
}